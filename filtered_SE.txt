b'366983'	b'Should a Business Analyst write API user stories?'	b"I work as a Business Analyst in a S/W development firm. At a previous company I was a BA in Asset Management, and the BAs there were more Business oriented (i.e. less technically inclined).  We are currently building a web application and I'm using JIRA to write the user stories, acceptance criteria etc for the functional requirements.  I'm writing user stories to describe functional requirements:  For example:     As a Client User, I want a confirmation email to be sent once I've   registered an account, So that I have confirmation that my   registration has been completed.   Acceptance Criteria:   The registration wizard will send an email to the registered email ID once the wizard has registered the Client User A confirmation message will be displayed on screen so that the Client User knows that registration has completed Client User will automatically be redirected to the Portal upon clicking on 'Finish' etc.     There are some developers that think I need to write the associated API tickets as well, and there are other developers that think it's not the role of the BA.  The thing is that whilst I've studied IT, I've never actually studied APIs in detail nor have I previously worked as a professional developer. I moved into Business Analysis directly.  Is it the role of a BA to write API tickets in a software development project? Or is it the role of the developer to write the associated API tickets as subtasks of the stories I write?  All the BA sites I've visited only talk about functional/non-functional requirements when writing User Stories (like the example I provided), and not of writing API tickets.  Thanks! "
b'386870'	b'Is there a recommended format for writing a technical debt story?'	b"Our team is starting to refine a set of stories that cover components and UI as part of an upgrade to a newer version of Angular. These components will then be used to recreate screens in an existing application. We are considering this work technical debt.  Is there a recommended format for writing technical debt stories?  We use the 'As a ... I need to ...so I can ...', as well as Gherkin's 'Given > When > Then' acceptance criteria, for our standard stories that are more directly customer focused.  Is there something similar that should be used for these tech debt stories? Or should we just list technical requirements? "
b'390502'	b'Usability or performance requirement?'	b'Usability requirements are focused on User interfaces, how easy they are to learn, how quick access to some frequent menu options are provided, etc. Suppose we have the following requirement:   The system should show menu options after user login within 1 second.   What type of Non Functional Requirements is this? A performance requirement or usability? Thanks '
b'390307'	b'Use-Cases for Two Inherited Actors'	b'We have been developing a requirements model for a travel agency system. There are two kinds of member users: premium and free. Both users are able to cancel their previous reservations. Unlike premium users, free users have to pay a cancellation fee as a result of cancellation.   In the use case diagram for the previous functions we have the following struggle: Shall we distinguish the cancel use case for different user types? That is, when a free user makes a cancellation, it should include the fee payment use case. But, we also know that reservation cancellation is a function that is same for both kinds of users (Although it may result in some other use case if it is a free user). So we are not sure whether a single use case is enough to show system capability. Moreover, we should use extends relation to show that sometimes it may include the fee payment. But if two different cancel use cases are used, we can show explicitly the includes relation of a free user. We will appreciate any suggestions. Thanks in advance. '
b'389062'	b'Identifying the Redundant Requirements in Scrum'	b"I'm working on the research to resolve the Requirements conflicts in distributed Scrum where teams are distributed over multiple locations. I'm proposing a model that consists of five steps including identifying redundant requirements, removing them, assigning unique IDs to each requirement, storing requirement information and resolving requirement conflicts. I want to ask that:   How Redundant requirements are identified in distributed Scrum?  How Redundant requirements are removed? How unique IDs are assigned to each requirement? How requirement information is stored? and How requirement conflicts are resolved?  "
b'389038'	b'Formulating requirements using ISO/IEC/IEEE 29148-2011/2018'	b"I'm trying to formulate some requirements using the ISO/IEC/IEEE 29148 standards. I know that the following is correct according to the standards.  The system [Subject] shall stop [Action] only when the stop-button is pressed [Condition].  I'm trying to do the same but for two conditions, as follows:  The system shall stop only when either the stop-button is pressed or when the x-things is reached.  I don't feel like this is correct but maybe it is? I couldn't find any straight-forward answer to my question in the standards but maybe someone here has some experience with writing formal requirements? "
b'366984'	b'How to document non-functional requirements in User Stories?'	b"I work as a business analyst in a software development firm. In my previous organisation, the development was done using waterfall and we wrote: 'Business Requirement Documents' (BRDs).  In my current role, the team is using Agile Scrum and JIRA to write the user stories to capture the functional requirements etc.  My question is, how best to capture the non-functional requirements in JIRA as a story?  In a BRD this was pretty straightforward, add the non-functional requirements in its own section and make sure each requirement has a unique ID next to it.     ID:   001   Requirement:   The web app shall be compatible with the following browsers: IE11, Firework 50 etc...   But in Agile Scrum, and especially in JIRA, how should these be documented? "
b'388145'	b'Should a Product Owner be responsible for an initial prototype?'	b"Is it typical that a Product Owner (or even a BA) creates a high-level prototype/wireframe of a system based on the requirements document to ensure that the requirements are clear enough to start working on user stories for the UX &amp; development teams?  I am currently being 'promoted' from a developer to UX designer and tasked with creating mock-ups direct from a requirements document, but the document is unclear on several aspects and have spent most of my time thus far doing what I would consider more PO/BA work of clarifying basic things in the requirements document. I am aware that this process is iterative and the UX/dev teams will probably need to discuss/clarify items during design &amp; development, but is there some sort of 'minimum viable requirements' stage the PO is expected to deliver before this happens and how is this determined?  Edit for clarification: prototype here refers to a high-level visual aid created in something like Sketch, rather than a first revision implementation in code. In addition, in my example, no user stories exist, only a raw, incomplete requirements document. "
b'388593'	b'what do you do when during UAT the customer realizes something major that should be included in the system?'	b"during uat, the user realizes a major missing functionality that should be included in the system. this is not related to the implementation of the application, but with the design and the initial laid out initial requirements.  if you push the current state to production, the app will appear unusable since it is missing a key functionality (that the customer didn't included in the requirements earlier).  you can also continue to develop but this will extend the timeline for the accomplishment of the app. and it would appear that the developers are behind schedule.  how do I proceed with this one? "
b'386497'	b'How to convert a use case to a use case diagram?'	b"Suppose I have a use case, like this example.   Normal Flow: The user will indicate that she wants to order the items that have already  been selected. The system will present the billing and shipping information that the user  previously stored. The user will confirm that the existing billing and shipping information  should be used for this order. The system will present the amount that the order will cost, including  applicable taxes and shipping charges. The user will confirm that the order information is accurate. The system will provide the user with a tracking ID for the order. The system will submit the order to the fulfillment system for evaluation. The fulfillment system will provide the system with an estimated delivery  date. The system will present the estimated delivery date to the user. The user will indicate that the order should be placed. The system will request that the billing system should charge the user for  the order. The billing system will confirm that the charge has been placed for the  order. The system will submit the order to the fulfillment system for processing. The fulfillment system will confirm that the order is being processed. The system will indicate to the user that the user has been charged for the  order. The system will indicate to the user that the order has been placed. The user will exit the system.       I would be grateful if you could let me know of a procedure or guideline that helps in converting this to use case diagram, more specifically the use case bubbles.  Going back to the example, I think I would have one use case bubble named place order, and I probably have another bubble named payment, and there is am 'include' relation from payment to place order. But I hope there is something more formal than intuition to help me come up with a more accurate diagram. Thanks!! "
b'371378'	b'Non-functional requirements metric and measurement'	b"Do all non-functional requirements need a specific metric and measurement?   Would a NF maintainability requirement such as:   'Upgrade to a new software version shall leave all database and personal settings unchanged' be correct? Would a metric and measurement need to be added? How would a metric and measurement be added to such a requirement?  "
b'343897'	b'Webapplication and App: Use case redundancy'	b"I have to write a software requirements specification for a software system that consists of two front-ends, an Android app as well as a web-application. The Android app and the web-application have similar use cases, but the web application offers more options: Contrary to the Android app for instance the web application has the option of CSV export when the user enters the 'Edit catalog item' use case.   How can I avoid duplicating the same use case diagram and use case specification without omitting the additional features the web-application offers?  "
b'347851'	b'Does a data flow diagram seem correct when one external entity is connected with too many arrows?'	b"I am trying to model a data flow diagram in accordance with a requirement document. The document calls for a system with many roles that users can play, where it needs constant information exchange between different roles. Here is an example of its functions, where 'Role A' is a reviewer or judge of some elements, and 'Role B' is a manager of those elements: 1. Role A is shown the list of elements (that are stored in a database), and chooses the items that he is interested in; 2. Role B gets a summary of the preferences of different Role A's, and assign the elements to them; 3. Role A receives the elements assigned to him, views them and leaves his feedback on the elements; 4. Role B summarizes the feedback from all Role A's, and decides which elements to eliminate from the pool. Based on what I have learned, I would consider Role A and Role B to be different external entities, and so the DFD comes out this way:  As can be seen, there are too many arrows linked to each external entity; while the processes are not connected. This is different from most of the DFD examples I have found. So, is my work correct? If not, how should I modify it? "
b'387225'	b'Identification of Nonfunctional Requirements'	b'For the most part, I am able to distinguish between functional and non-functional requirements, but at times it is not clear for me.  For example, the following are non-functional but they seem functional to me:  The software must use SSL encryption for transmissions   Or  The software must store the configurations in an XML file   Could you please help me with a rule of thumb that helps me make the distinction? Many thanks! '
b'386946'	b'Is deciding the release date before collecting all requirements un-agile?'	b"I have just started reading the book Applying UML and Patterns by Craig Larman. I find it very interesting because it challenges many of what I have been told at work. I read that requirements aren't fully collected in one go in agile and it takes many iterations to complete requirements gathering. If that is the case, is putting up a hard set deadline, which is what I'm forced to do at work, very un-agile, considering there could be some new ground breaking requirement (or change request masquerading as requirement) tomorrow? "
b'386577'	b'requirements model and UML'	b"I need to create requirements model for my software(first step of software engineering), But I don't know which icon of UML can help me to implement requirements model. "
b'386129'	b'Requirements Gathering in a Foreign Country'	b"So, I wasn't sure if this was the place, but I have faith the mods will move it if necessary.  I'm about to leave on a trip to another country with the management team for a new project. It's my first introduction to a new industry and we will be attending a conference on the industry of the new product we're building and also meeting with our new clients.  So let me share my concerns: I'm generally new to this. I've be promoted recently, and so I'm just trying to wrap my head around a process for being ready for this entire experience.  So, what are key things I should be focusing on? What are things I should be keeping an eye out for?  I'm going to be doing some analysis and I'm generally comfortable with that process, however, it seems we will be doing a LOT of things in very little time. So I'm just trying to prepare myself to absorb as much information as possible (I'm open to tool suggestions for this. For a phone or tablet)  What I would like is a sort of checklist of things to do or prep for or look for. Also any advice outside of that checklist would be nice. I've never done a trip like this so I'm not sure what to expect.  Thank you all in advance. "
b'195181'	b'Are animations and other eye candies considered non-functional requirements?'	b"I've seen many lists on the internet that includes many 'ities' (maintainability, scalability, portability, etc), but I'm not sure if animations, screen transitions, and similar features are functional or non functional requirements. "
b'136536'	b'Use Case Structure'	b"I am creating use cases for a project.  A generic user is extended by user 'categories' which then is extended by an administrator (that can do all tasks possible).    Is the following acceptable to portray? Is there a better way to portray such info?   "
b'212834'	b'User Story vs Requirement'	b'User Story captures what the user wants to do with the system at a high level. I understand that the user story would further drive a number low level requirements. Is user story same as high level requirement for the system? '
b'135608'	b'Are High Level Design and Low Level Design documents needed to follow Agile development process?'	b'Our team is developing a project using an Agile development process. All of our requirements are converted into product backlog items and task are broken down based on that. One of my team member suggested to maintain the High Level Document (HLD) and Low Level Document (LLD) for the requirement.   Do we need to have these documents to follow the Agile process? '
b'79798'	b'System analysis at the begining of the project'	b"When I want to develop a new application, first I'm going to design a UML and specify project details and definition. But when I start development process, I determine that I should change some parts of my idea in order to become more popular software or easier logical steps for my users or simpler process or anything else.   Then, I change my code, redesign some parts of my UML and start/continue development process one time again and sure that this time I have a perfect project definition and UML, but after a while ( this time takes longer ) i determine again I should change something again ! So I get back and change my UML( sometimes not ! just continue the project without changing UML ) and so on. This process will happen over and over until I become tired or find (almost) the best state of the project or have time limitation problem!  So my question is:   'Can I design a perfect UML at the beginning of my project so that describe the best state ever !?'  or  - 'Should I swear in God never ever change my UML ( and project definition ) even if there is a better one and write current state to the end!'   Another question 'Is changing some parts of a new idea, even if analyzed with hands of the best analyzer in the world, is inevitable ?( in order to find the best state )'. I mean we can't fully simulate user experience, can we? We should see it in action. "
b'380805'	b'How to deal with redundant requirements when using Scrum'	b"Changeability is a quality attribute of requirements that is emphasized in some classic literature. To get changeability of requirements, they must not be redundant.  However, when dealing with requirements in Scrum, some practices will inevitably lead to redundant user stories. For example, if a software shall have a number features that are similar from a technical perspective, but the user has a different path in the UI for each feature: In order to keep the stories small (INVEST), I would create different stories which are only slightly different, or possibly even equal only with different acceptance criteria. Now, when the business requirement changes, I have to make sure to update all redundant stories accordingly.  Normally, this would be manageable. After all, there should not be a large number of open stories, but just enough to fill a small number of upcoming sprints. In practice ('Scrum, but...'), customers may insist on a breakdown of a large number of requirements for planability. But also large-scale Scrum may lead to a situation where there are a lot of open stories.  Can a long list of open stories be managed without losing the benefits of Scrum? "
b'380815'	b'User, Customer, Company Relationship'	b'Is there anyone who can explain the relationship between customer, users, and the company ?  As far as I understand, the product is used by the users, and before that product is designed, the users list their requests for that product. This is called user requirements. The customer is responsible for constructing a negotiation between the users and the company. Besides, the customer has to pay for that product and deliver user requirements to the company.   This is actually what I understood, but I could not find a clear explanation, so I cannot make sure that it is true.  '
b'379975'	b'Is this a functional or non-functional requirement?'	b'Is this requirement:     The system is required to have an easier GUI to make it more usable by   any kind of user (normal or disabled user)   a functional or non-functional requirement ? And Why ? '
b'377887'	b'What should I put in as business requirements where only improvements to existing processes are required'	b"I am writing system requirements for a tender.   Functional requirements consist of mostly improving the system (add/remove data fields, improve statistics and activity log, exchange more data with other systems) without adding any new processes.   What should I put in as business requirements? Can I leave that section empty if there is no new business process? It seems kind of pointless to describe processes which are already in production.  EDIT: Example.  Already existing business processes (BP): BP1 - User opens application, enters data about applicant, application is approved. BP2 - Select statistics about applicants data for local and international organizations.  In tender I add this Functional requirement (FR): FR1 - add 200 new fields about applicant. FR2 - add new data fields in statistics filters according to FR1.  BP1 and BP2 doesn't change from business perspective, only amount of data.  Is it necessary to include in tender business process requirements such as: BPR1 - add new data fields to application because of digitalization. BPR2 - add new fields to a statistics because now we have more data in application and therefore we need more stats for local and international organizations. I'm writing super basic example to understand if this is even necessary to include description of business process which doesn't change. If I was a developer, I just add new fields in already existing application form and add new filter fields in already existing statistics filter, since both those processes already exist as they are needed. Only improvements to existing stuff. "
b'377530'	b'Doubt about non functional requirements'	b'I have some doubts about non functional requirements in a web app. Are quality attributes non functional requirements? Also, these are all examples of non functional requirements?   The system should have a score >= 80 in PageSpeed All network transactions should be encrypted The users need to login to the system to access the administrator panel 90% of new users should be able to perform the main tasks (task 1 and task 2) of the system without any error the first time they perform the task The system should be compatible with the main browsers   ? '
b'375870'	b'Use case for interface'	b"While going through some lecture video on interface. I noticed      If we don't know about implementation, just requirement specification then go for interface.   What can be the scenario? Though I've used interface in many cases, but didn't gwt the essence of interface, as stated.  "
b'375203'	b'Where should I specify validation messages?'	b"I'm creating a Functional Specification Document (FSD) for a project. I'm pretty confused as to where I should specify error messages? Do they belong in the FSD, or are they part of the Technical Specification (TSD)?  I've read these articles to help me get started with making FSDs:   How to Write a Good Functional Specification Painless Functional Specifications    These are good articles, but they only give general idea about what FSD should contain, but no articles about where to put the more specific details in. "
b'372185'	b'Which process should field specification fall under, requirements or design?'	b"In SWEBOK version 3, there are separate processes defined for requirements and design: 'Software Requirements' and 'Software Design.' Under 'Software Requirements' there is a section called 'Software Requirements Specification.'  Since defining fields of the different object of a new model (e.g. set of classes) is such a common part of building a new project, I expected an example perhaps of that, but none was given from what I can tell.  When it comes to requirements gathering and building a requirements specification, should it include low-level details such as fields and their validation? Or is that typically done in the design phase?  "
b'372012'	b'At which moment should event storming be used?'	b"I've recently seem event storming as a quite reasonable way to get understanding form a domain, in order to build a domain model. We understand the events in the domain, which for the domain experts ends up boiling down to just telling the business processes they are used to in their everyday life, then we find out the commands that might rise these events, and finally the aggregates.  By everything I've read it seems a very viable way to understand the bussines rules and business logic.  But there are many points that I still don't understand. The first would be: when should event storming be used in the course of the project?  My doubt seems to be mainly regarding event storming and requirements gathering. Should it be done just after requirements gathering, or it should be viewed also as a technique of requirements gathering?  In summary, in what stage of the project should we use the technique of event storming? "
b'371735'	b'Where to place non functional tasks in user story map'	b'I am new with the user story map approach, I started with to compose the stories to be implemented from user perspective, and it seems very promising.  However, I am not sure about the non-functional stories, how to place them within the story map. Especially when are talking from user perspective, that is not aware of these details (e.g. performance, stability, etc...) '
b'370656'	b'Are repeat, forward, rewind and stop extending usecases of the base usecase &quot;Play Music&quot; in a music player?'	b"I am confused in a scenerio, where i have a music player that has a music playlist. I need help on the following usecase of the music player.  Title :        Play the music playlist Precondition:  Playlist not empty . . . Mainflow:  1) User adds music to a playlist. 2) User chooses the play option. 3) System plays the playlist.  Extensions: . . .   Now the music player shows the user the options of:   a) Pause   b) Play  c) Step forward to the next song   d) Step back to the previous song  e) Repeat  Are the above options extending usecases of the main usecase mentioned above?, or are they just standalone usecases on their own without any relationship to the base usecase('Play the music playlist') above or which if any from the above have extend relationship with the base usecase. What makes me think they are extending usecases is that they add optional behaviour to the base usecase, for instance the user can press the repeat, forward or rewind button and then start to continue with the base usecase 'Play the music playlist'.On the other hand what makes me suspicious is that the options can be triggered even after the base usecase has been executed fully, for example even after the system has started playing the music playlist the user can choose all the above mentioned options (Repeat, Play, Pause, Forward, Rewind ) "
b'369534'	b'Requirement elicitation technique for implicit requirements'	b'   Suppose that you are in the phase of requirement elicitation (discovery). You have   already interviewed your customers and created use case models to discover as many   requirements as you can. However, you strongly suspect that there are some implicit   requirements (e.g., domain knowledge that is so familiar to customers that   customer find it hard to articulate or think that it is not worth articulating). Describe   a requirement elicitation technique that can help you surface those implicit   requirements.   Thi\xc5\x9f is a question from my software engineering sample exam.  I understood that implicit requirements are the things that users are going to expect that were not captured explicitly.  But what is requirement elicatation technique ? Should i interview with customers ??? '
b'367191'	b'Robustness vs Correctness Competition'	b"Reading 'Code Complete 2' in a Quality of Requirements paragraph I found this:     Are acceptable trade-offs between competing attributes specified \xe2\x80\x94 for   example, between robustness and correctness?   (this above is a point of a large checkbox list in order to check the quality of the requirements)  So, I found a lot of definitions of Robustness and Correctness, in the web, academic books, etc..   e.g. :  In the 'Object Oriented Software Construction, 2nd Edition, Bertrand Meyer, Prentice-Hall, 1997' book:        Correctness: The degree to which a system is free from [defects] in its specification, design, and implementation.   Robustness: The degree to which a system continues to function in the presence of invalid inputs or stressful environmental conditions.      Despite this, it's not clear why and in which situations these two might be in conflict.  My question is: why are these two attributes in competition? "
b'17696'	b'Writing a Software Requirement Specification'	b"I have a few questions about writing a specification and they are:   When we write a software specification, under the topic 'User requirements definition' we have to specify the 'Functions' and 'Constraints' only ? Does 'User Interface' fall into 'functions' or 'constraints' ? What are the major key areas (requirements) a software can be broken into (e.g. UI ) ?  "
b'218386'	b'Requirement gathering and use cases examples'	b"I've heard a lot about requirement gathering and use cases in theory, but in practice often happens that we ask ourselves 'should we include this? should this be a use case? in which language should we write this particular requirement' and so on. These questions are mainly because of lack of practice, and since we cannot go picking projects to 'learn in practice' it's a little bit hard to get used to the kind of thinking we need in the process of gathering requirements for a new app.  In that case, is there some place where can I find real life examples of requirements gathering and application of use cases? I've found some books, but they are mainly focused on teams and I work alone, so it becomes a little confusing. "
b'179417'	b'Formalizing a requirements spec written in narrative English'	b'I have a fairly technical functionality requirements spec, expressed in English prose, produced by my project manager. It is structured as a collection of UI tabs, where the requirements for each tab are expressed as a lit of UI fields and a list of business rules for the tab.  Most business rules are for UI fields on a tab, e.g:   Must be alphanumeric, max length 20. Must be a dropdown, with values from table x. Is mandatory. Is mandatory under certain conditions, e.g. another field is just populated, or has a specific value.   Then other business rules get a little more complex. The spec is for a job application, so the central business object (table) is the Applicant, and we have several other tables with one-to-many relationships with applicant, such as Degree, HighSchool, PreviousEmployer, Diploma, etc.   One such complex rule says a status field can only be assigned a certain value if a many-side record exists in at least one of the many-side tables. E.g. the Applicant has at least one HighSchool or at least one Diploma record.   I am looking for advice on how to codify these requirements into a more structured specification defined in terms of tables, fields, and relationships, especially for the conditional rules for fields and for the presence of related records. Any suggestions and advice will be most welcome, but I would be overjoyed if i could find an already defined system or structure for expressing things like this. '
b'364491'	b'Understanding use case levels'	b"I've found out that there are 5 use case levels:   Level 0 Cloud Level 1 Kite  Level 2 Sea  Level 3 Fish  Level 4 Clam   Cloud level lists only high level users goals such as 'Manage files'.  Kite level mentions the actor and some more specific cases.  For what I've understood,  Sea level use cases should document the following things: Use Case ID, Use Case, Actor, Trigger, Precondition, Postcondition, Main Flow, Alternative Flows, Exceptions.  But what exactly is a level 3 (fish level) use case? What is it for and how is it structured? Is a fish level use case a subfunction that I can refer to in my level 2 use case?  I would appreciate some insights. "
b'259790'	b'Use case diagram : distingishing the actor of a use case'	b'I know a system contains a set of use case diagrams and not one use case diagram, but anyway in the first step to find the system requirements or to analyze them I have problem in distinguishing the actor of a use case.   suppose the system is : Library  one actor is the Member  and one actor is the Librarian.  a typical use case is Borrow a book  Suppose the one who interacts with the software is Librarian. Then borrow a book should be associated with librarian or the member?  In fact Borrow a book use case is a service of the system for the member. but the actor who interacts with it is the librarian.   In which stage and in which use case diagram I should use the member as actor and associate it with the Borrow a book use case? and in which diagram I should associate it with the librarian?  Also the librarian is really an actor of the system or its part of a system? '
b'39727'	b'Requirement Traceability matrix'	b'What is a requirement traceability matrix?   What are the differences between different requirement types and what are the advantages/disadvantages of using these matrices? '
b'363590'	b'Do I need requirement analysis if there&#39;s no client?'	b"I think it happened to everyone, having side projects, trying to do something new and big in their spare time, or maybe having a little startup where everyone has clear in their mind what the software will do and what are the design goals to address.  I was wondering what type of documentation has to be produced under these circumstances? Since the client and the analyzer are the same person, many of the models of communications are useless, at least in most of contexts. But it's useful to track requirements and changes, especially if the software is big and complex.  What's the documentation that must be provided for self-produced software?  Are there examples of documents drawn up for open source software? "
b'362755'	b'How to deal with stories that share functionality'	b"I have two stories (I know they are missing the benefit part)   As a Credit Management User, I can view the current and previous payroll  differences for Offices. As a Credit Management User, I can receive an email containing a PDF of the  current and previous payroll differences for Offices.   The two are related in that they would have the same Query / Filter criteria. The only difference is that in the 'View' story, the results are displayed to the User and in 'Email' story, the results are written to a PDF that is emailed to the User.  I am struggling with the separation of the common aspects of these two stories or if I should even do so.   For example, they will both have the same query, what they do with the results is different.   Should I separate the query out into another story that is purely technical?   The creation of the PDF and sending of the email should be done offline, should that become a technical story?  I could see breaking those two stories down into 2 functional stories and 2 technical stories.    As the System, I can calculate the differences in the current and previous      payroll for Offices. As a Credit Management User, I can view the differences in the current and previous payroll for Offices. As the System, I can create a PDF document of the differences in the current and previous payroll for Offices.  As a Credit Management User, I can request to receive an email containing a PDF of the differences in the current and previous payroll for Offices.   The problem I keep coming back to is that the 4 stories are not independent and do not 'slice the cake'.   So I am not quite sure how to deal with these two. "
b'361661'	b'System requirement in use case diagram'	b'I have system requirements that the system will send an alert to the user. This requirement is the most important requirement of my system.  Is it represented in the use case diagram or not?  Thank you. '
b'98702'	b'Brainstorming questions to elicit features in new software version?'	b'Because of a change in technologies, we are doing a major version change in our in-house enterprise software. I am going to be doing the usual of interviews, observations and brainstorming sessions.  What general (and fun!) questions do you recommend/use in a first pass to elicit the discovery or remembrance of new functionality or changes to existing functionality? (Too much literature on requirements gathering tells you the easy part: how to get details on functionality. Nobody seems to have much on actually eliciting the function at first!)  Examples:   You have a magic wand. You can wave it and change one thing about General Software v1.0. What would you change, how and why? Have you used any software where you wished something in it was also in General Software v2.0? What functionality is too complicated in General Software v1.0?  '
b'360478'	b'Why bother gathering requirements when we know they will change?'	b"I have always been taught that one of the most important things to do at the beginning of the developments of a software is the Requirement gathering. I have also been taught that requirements always (most of the time) change dramatically between the beginning and the end of the project, either because the client wasn't really sure what (s)he wanted, or because (s)he changed his mind about some functionalities, or for any other reason.  So I have a question:  Why do we spend so much time gathering detailed requirements at the beginning if we know that they will be invalidated and change in the not so distant future? "
b'359668'	b'How should I translate a requirements document into user stories?'	b"I received a big old fashioned requirements document. But my team is working using agile methods (a combination of scrum and kanban), so what we need is user stories.  Is there some guidance for 'translating' requirements into user stories?  Obviously I don't want to start from scratch, as someone did good work to compile that doc. But in its current form it is essentially useless. The doc is hundreds of pages long, and not written from the user's perspective. Translation may take as long as starting from scratch...   So, I'd appreciate tips from someone who's faced this before.  For example, I've been looking for related major sections, and converting them to epics. Another old trick, looking for nouns and verbs and convering those to roles, actions, entities, etc. "
b'359837'	b'Writing requirement for Response Time from Hosted Server'	b"We are contracting with a group to create some cloud services for us, and would like to write a requirement for them stating that a particular API call will provide results within X seconds.  They are pushing back, saying such a requirement can't be guaranteed because the problem may be in the Internet connection and not in their servers, which is a reasonable point.  But getting a timely response for this API is vital for our product, so we are loathe to have no requirement.  Is there a way to write a requirement around service response time that takes into account Internet 'weather'? "
b'94912'	b'Is it better to blindly match the project requirements or to match the spirit of the project requirements'	b"You know what they're asking for. You know what they really want. However, technically the way they wrote it is with a litmus test of requirements that don't match what they want because they don't understand what they're asking for.  Should it be a part of our job to match the spirit of the requirements, or match ridiculous requirements with this gut feeling that the requirements will change once they see the final result?  I feel it's more ethical to determine what the user really wants, and find a solution with requirements as a guideline, but often I find others lose patience too much and just wants to give them what they technically ask for. "
b'358215'	b'Naming standard for functional requirements'	b"I'm confused how to name software functional requirements, and I have searched some examples and found names like F-01 (for functional requirement number 1) and found other examples like SIMT-01 (the name of the system followed by the number of the functional requirement).  Does someone know a standard/journal that says how to name functional requirements? Because it seems the IEEE doesn't mention it. "
b'356107'	b'Using business use cases vs user stories in a new requirement procedure?'	b"Actually in the company that I work there isn't a procedure or any kind of methodology choose to develop software. The software developed is administrative to the own company, clients applications many of them data driven and some outsourcing wherever the occasion arise. My manager give me the task to create a set of procedures for the SDLC(Software Development Life Cycle), knowing that in the near future will be implementing SCRUM.   I've read and research a lot about different approaches to the requirement phase and I find a pretty good book, Mastering the Requirements Process,  that describe a methodology that I think it can benefit the company (because sometimes the software is produce without thinking in the main problem or process) which is the Volere Requirements Specification Template.  I've not finish reading the book and I have to hand over a draft of the procedure and I'm pretty confused in too things:   Taking in account that SCRUM is something that may take time for the team to understand and learn, should I use the user stories or business use case to specify the requirements or both. (I'm not asking about the difference because they are a lot of answers about that already). In the Agile Manifesto, Scrum Methodology there is a principle that is working software over documentation, which is logic, because requirements are always changing. In the book there are some examples that establish in what kind of projects it's needed more formality, in the case of quick and not so formal projects named 'Rabbit Projects' the authors always said that is not needed to have the requirement in a SRS documentation, how then can the stakeholders and software team have a clear understanding of what it's need to be done if is not documented?  "
b'355703'	b'How implement company procedures while using scrum?'	b"My manager give me the task to implement new ISO procedures of analysis and design (later it will be of the entire software development cycle) because in the team we don't have any kind of methodology to develop the requested software which tend to be a 'developer do what they want thing'.   My manager wants to implement SCRUM (I've reading about it, just to have a general idea) but because in SCRUM the steps are iterative the team decide which   process will  they use (decisions of how gather the requirements, how design x UI, how you should program),  I'm feeling that it conflicts with having a technical procedure of how the things should be done.   Questions   Is there  a general requirement discovering in SCRUM? Like interviews, surveys with the client and then those stack of requirements are shared with the team in the multiple sprint meetings for the backlog or it's a continue discovering with the team and the stakeholders (users stories in the sprint meetings) I have to create a design procedure, which will describe how to approach UI design (mockups, prototype, etc), in SCRUM is not up to the team how they do it?   An analyst will follow this procedures and after a view of what the project is going to be share it with the team to begin the implementation, though removing the responsibility of recreating the entire development process for each application without an specific methodology.  I know the questions are not specific to the main question, however the answers of them will help me to find an answer.  I'm not going for any certifications, all the procedures in the company are made with the standard ISO 27001, but I'm more in a draft process with trial and error.  What the management want is an established procedures of how the development cycle will be, which I found a little difficult to merge with the AGILE/SCRUM methodology (maybe I need to research more about it) because things as flow as the work is evolved and put persons over process.  "
b'352341'	b'When does the team discuss requirements when using Kanban?'	b"I have been reading a bit about Kanban and I am slightly confused on the topic of Requirements.   In my current project we use Scrum. At the beginning of a Sprint, we have a session where the BA does a walkthrough of the Story and describes it as best she can. We then take the story, review it, discuss it and prepare a questions for the BA for the next Sprint planning session. On the next session, the BA answers all the questions and the session finishes with us having understood the requirements (well most of the time).   The next step is that we then produce a technical design and develop the solution/story.   With Kanban, everything I read suggests there is no Sprint Planning in Kanban. My question is at what point (in Kanban) do the techies and the business folk sit down together to discuss the requirement for the story? Doesn't the Product Manager or BA provide a walkthrough of the Story in Kanban?  With Scrum, the BA is usually available throughout the Sprint to support the development and I assume it is the same with Kanban. It is not clear for me though how with Kanban, the techies understand the Story if there is no sprint planning.  "
b'135673'	b'Is there a canonical book on requirements gathering?'	b"Is there a book out there that's the de-facto standard for describing best practices, methodologies, and other helpful information on gathering requirements for software and database projects? What about that book makes it special? "
b'352467'	b'Should requirement/issue number/code be included in the comments of the source code?'	b'I am working on a number of maintenance projects and I always include requirement/issue number/code in the the comments whenever I am adding or changing code. In such way I provide traceability from requirements to the code and back. My experience is that such effort can be of really great help for furhter maintenance, especially if requirements are changing or are updates due to initial inconsitencies in the requirements.  However, I have seen source code from other projects which have no comments at all and I can only guess what part of the code is implementing what requirement.  What is the good practice in traceability of requirements and comments? '
b'104928'	b'Manager keeps changing requirement specification after every demo'	b"Background of my working environment  My manager has no background or understanding of computers or software whatsoever. It is highly likely he hasn't seen code in any form (not even from a physical distance of 10 feet or less) in his life.  There is no one who understands the complexity of what I am asked to implement. To the point that if I semi-hardcode no one would know.  On Joel's test we score an unbelievable score 0.  The problems   The manager and at times other 'senior' keep changing the requirement specification. Changes which, if good engineering be done and not patchy 'fixes', require change in the underlying design. There is absolutely no one who looks at code (probably because no one knows how to, or even if it should be done) which means no one will ever be able to:  Appreciate the complexity of the problem or the elegance of the solution. Suggest improvement to the approach.  Appreciate the quality of the code. Point out where the code can be improved.  A lot of jargon is used which makes sense grammatically but fails to make any sense any other way. Doesn't feel, behave or work like a software company.   The question  What should be done? Especially regarding there being no one who would point out improvements in my code.  Update  To answer HLGEM's (and possibly others) question about what I've done to try and fix it. I offered to set up Redmine and introduce source control to everyone. I said I would recommend distributed (git or mercurial) but will also talk about centralized ones and let the team decide. Response was that things are being done and will be done within weeks. Haven't seen that nor am I aware if other parts of the company use it. "
b'350667'	b'Defining Non-Functional Requirements (modifiability, security and usability)'	b"I have some doubts about defining non-functional requirements relative to security, modifiability and usability.  Relative to security for example a requirement for a system that needs to use https because it deals with financial information. Can a security non-functional requirement for this be 'all transactions that involve financial information must be encrypted'? Because it seems to be a non-functional requirement, however it doesn't seem measurable.  Relative to modifiability, in the case in which a system must be implemented in a way that it is easy to add new functions. How can we define a non-functional requirement for this that its not vague and is measurable?  And about usability, is 'the system must present understandable error messages' a non-functional requirement? Because it's not functional, however, its not measurable, so can it be considered a non-functional requirement? Also are requirements like 'the interface must be responsive' and 'the system must be cross browsing' non-functional requirements relative to usability? "
b'350251'	b'Requirements, user or system prespective?'	b'How to identify when to use an user or a system definition of a requirement?   In the example below:     Use case: List Posts by status      Pre-conditions: The admin is   authenticated.  There are items registered in the system.      Trigger: The admin wants to list the posts according to its status   (published, draft)      Ator: Admin      Main flow:          The system presents the saved posts and all the list options (published, drafft)   The admin chooses a list option   the system list the posts according to the list option chosen by the admin         Post-condition:         Posts listed according to the status chosen by the admin.      The functional requirements are:   the system shall present all the registered posts to the admin when he accesses the posts admin page. The system shall list the posts according to the status choosen by the admin. The system shall present an info message to the admin if there aren\xc2\xb4t registered posts. The system shall only list the posts if the admin is logged in.   Or   the admin shall be able to consult all the registered posts when he accesses the posts admin page. The admin shall be able to list the posts according to its status. The admin shall be notified if there aren\xc2\xb4t registered posts. The admin shall be logged in to check all the registered posts.   Or none? Or its equal?  '
b'349872'	b'Doubts about requirements (textual use cases and functional and user requirements)'	b"Im studying about requirements but Im with some doubts. I read that it is common in a project to divide the requirements into user, functional and non functional and I studied about the three types.  I have two doubts below but they are related.   First is about the difference between the functional requirements and user requirements. The user requirements are the tasks that a type of user can perform with a system right? But that isnt also the functional requirement?  For example in a site like ebay user requirements can be 'Search catalog', 'Pay Order', 'Add item to shopping cart', Log-in', 'logout', 'recover password', 'Get list of purchased products', right? But this arent also functional requirements? So why this distinction of user and functional requirements? Or functional requirements are not specified like this?  Also I read that the textual use cases are used  to explore the user requirements and that then we can get the functional requirements from this analysis. So we should first identify the user requirements, like 'Search catalog', 'Pay Order', 'Add item to shopping cart', Log-in', 'Log-out', 'Recover password' and these user requirements besides being user requirements are also use cases that we can create to get the functional requirements? But so, again the first doubt, which should be the functional requirements of these use cases/ user requirements above?  A use case for 'Pay order' is for example:     Precondition: The user have one or more items in the shopping cart.      Trigger: Requester acceses the shopping cart.      Main Flow: The system displays detailed information about the shopping   cart. The user confirms the order. The user select the payment method.   The system informs the user about the result of the operation.      Postcondition: The order is confirmed and the information is stored.   How can we get functional requirements from this?  It is something like theese:  'The user shall ble able to login', 'The user shall be able to logout', 'The user shall be able to pay an order', 'the user shall be able to add an item to a shopping cart'  It seems the same thing of just 'Log-in, 'Log-out', 'Pay order'. "
b'317405'	b'Drawing UML activity diagram for user-forget-password functionality'	b"I'm trying to draw a UML activity diagram for the functionality of a user retrieving his password when she has forgotten it. It looks like this:    As you can see, this functionality requires two requests at different stages, one for the input of the username, the other for the input of the verification code. So the whole procedure could be divided into two sub-procedures each representing a single request and response pair. That's why I wonder whether I should use one or two activity diagrams to illustrate this functionality. Should an activity diagram correspond to a single functionality or to a single request/response pair?   In my opinion, the former one brings completeness, but increases complexity. The complexity could be solved by the latter one, but it also brings partition and dependency issues. It's hard to decide for me, please give me some suggestions. "
b'347597'	b'Mapping between functional requirements and software modules'	b"Let's say we have 5 functional software requirements (R1-R5). Our software design results in 6 modules (M1-M6) or classes to be implemented. I am assuming that the design is more or less optimal, each module having a well-defined purpose and the dependencies between the modules have been minimized.  In one case the relation between requirements and modules will almost be one-to-one, as shown on the left side of the figure below. In another case (different project) it might be many-to-many as on the right side:    The left version will probably be much easier to handle from a testing and project management point of view.  My questions:   Are there commonly used names for these different types of relations between requirements and modules? Can we say that in the highly interconnected case, the requirements are flawed and should be restructured somehow, or is it just an indication of a more complex system?  "
b'347431'	b'Are constraints design software requirements?'	b"Today a colleague who is studying systems engineering told me that software design constraints and GUI requirements (Exs.: the software shall be develop in three layers: presentation, business and persistence; the GUI shall use an tree object to display the structure) could not be considered system or software requirements.   I\xc2\xb4ve looked it to some templates of SRS (Software Requirements Specification). The RUP's templates say  that design constraints and GUI requirements are a kind of software requirements. Newer templates of IBM put it out of the Specific Requirements chapter.  Then, should constraints software design be considered software requirements? "
b'346875'	b'Technical parameters for web application?'	b"I'm doing a small project for the company a friend of mine works at. The project is a tool for doing Quality function deployment using the House of quality method.   As part of the initial planning phase of the project, they want me to perform the same (House of Quality) method on the project, in some kind of meta way :D   I think the idea is great, but I'm struggling to come up with suitable technical parameters for the project.  So far I have the following customer requirements, with the importance in parenthesis:   (5) Web based (5) Multi user (4) Real time (changes at one client should show up 'immediately' at other clients) (3) Modify-and-commit mode (2) Trace source of customer wants (linking to surveys, etc.)   That's the 'voice of the customer' part, now for the 'voice of the company' ('the company' being me as a developer). These  are the technical parameters, i.e. measurable properties of the product.   I'm having a real hard time coming up with anything measurable that is related to the customer requirements. If I was building something physical, say a car for example, there would be stuff like weight, seconds from 0-60, miles per gallon, etc.   An app can't be 'slightly web based' or 'very web based' for example.  Maximum number of users is a theoretically valid parameter, but it doesn't make much sense - if it's multi user capable, there is usually no limit of the number of users (for all practical purposes at least). "
b'343300'	b'What are some good alternatives to use cases when the system has no actors?'	b"I'm working on a software and hardware system which is completely autonomous in its activities. There is no user involved and one external system which data is sent to. There are a lot of different activities and processes going on inside the system, but they cannot be modelled well with use cases as these are all internal. There is, however, one use case and that is sending the data to the external system, but it is not very representative of the system.  I am developing this project using SCRUM and wanted to have some use cases or user stories to base my sprints on or build part of my backlog with. In our team we have traditionally used these to do this.  I was thinking about using something like process models for these activvities but it seems non-standard and slow or hard to explain to my manager and client.  What are alternatives to representing a userless system in such a way that it is clear to business and IT stakeholders and, less importantly, can be used as the basis for agile sprints, much like use cases and user stories? "
b'342846'	b'What best way to document the requirements?'	b'We have 3 different systems which exchanges data on a regular basis. There are    Some standard mappings between fields (Ex: field Category= A or B depending on input). Indirect mappings between fields. (Ex: field Prio= A or B depending on input along severity) Filling Mandatory  fields (Ex: Summary) Standard Workflows. Indirect workflows. Some specific functional and non-functional requirements.   Writing as text is too much as it has only long textual data. I am wondering how we could write such requirements? User stories?  Thanks '
b'339568'	b'Which should be done first: use cases or user stories?'	b"I've heard both about use cases (I'm talking about the description, not the diagram) and user stories being used to gather requirements and organize them better.  I work alone, so I'm just trying to find the best way to organize requirements, to understand what has to be done in the development. I don't have, nor need, any formal methodologies with huge documents and so forth.  User stories I've seem being used to build the product backlog, which contains everything that needs to be done in the development.  Use cases, on the other hand, provide a description of how things are done in the system, the flow of interaction between external actors and the system.  It seems to me that for one use case there are several user stories.  This leads me to the following question: when discovering requirements, what should I do first? Find and write user stories or find and write use cases? Or they should be done 'at the same time' somehow?  I'm actually quite confused. Regarding use cases and user stories, for a developer who works alone, what is a good workflow, to use these methodologies correctly in order to have a better development? "
b'342743'	b'Requirement Specification - How to write an &quot;as much as possible&quot; requisite'	b"I have a few requirements of the type    'the system shall be as modular as possible (to allow distributed installation and reduce cabling)'  'to reduce development and maintenance costs, the same hardware shall be used for different subsystem's when possible'   I see these as ambigous. Can anyone think of a way of writing them unambigously? "
b'342733'	b'users&#39; consent for user requirement specification document'	b"I'm working for a software development company. The question that I have is whether should we present a user requirements specifications document for the customer/s before we start developing the actual system from scratch?  "
b'342520'	b'Do requirements belong in an action plan?'	b"I am writing an action plan for a personal software project, which I will do research on before and during development. I think the name 'action plan' does a decent job describing what it is used for. The research report that will be written after the action plan, will be finished at the same time the application is done. UML diagrams are part of the research, but what about requirements? Is knowing the requirements part of the plan or do you need to have done some decent research before knowing what they are?  Here are headings of my action plan so far, excluding general purpose report headings such as 'Introduction' and the like, to give some context of what, I think, is supposed to be in the plan:   Background Scope Problem analysis Goal (research question) Research method Stakeholders (me) Strategy (version control, tools, testing, etc) Risk analysis (time, costs, etc)   I guess the 'Requirements' heading would be inbetween the headings 'Strategy' and 'Risk analysis', but I am not sure if they should be in the report at all. "
b'121289'	b'What is the difference between requirements and specifications?'	b"I've been tasked with developing requirements and specifications for a project our group is starting.  I realized that I don't know the difference; a Google search just confused me more -- it seems some people say that specifications are requirements, but at a lower level. "
b'340019'	b'What is the importance of the vision document and how it helps development?'	b"I'm a developer that works alone, and recently, searching for what kinds of documents I still could benefit, even though I don't require anything formal, I've read that one document that still is highly recomended to write is the project vision document.  I found it described as a short document (a page and a half or two) containing what problem has to be solved, how it will be solved and how the end user will benefit from the solution.  Reading more, it seems that this document is one extremely important input to discover the requirements and finaly the user stories.  In that case, considering that this is, as I understood, the first step when starting to build a software, what is the importance of this document, and how is it used so that it helps the development?  I still don't fully get how such a simple and short document can be that important and help that much.  How is this document important and how it is used to help the development process? In particular, what is the role of this document in the requirements gathering process? "
b'340076'	b'How to write System requirements - not all architectures fulfill all requirements'	b"We have a system that is largely configurable, that can be organized in different architectures, and I'm struggling to write its requirement specification. I'll give an example   Module 1 does A Module 2 does B Module 3 does C   The system can be configured to have any combination or all of the three modules. How do I write the requirement?   1) The system shall be configurable by Engineering to do A.  2) The system shall be configurable by Engineering to do B.  3) The system shall be configurable by Engineering to do C.  4) The system shall be able to do A.  5) The system shall be able to do B.  6) The system shall be able to do C.  I like the first 3. The next 3 however will not necessarily always be true (if system is configured with modules A and B, requirement 6 will be false).  Shall I complete requirements 4 to 6 with 'if the system is configured to do so'? Are 4 to 6 necesssary at all?  Thanks for your help!  EDIT: So basically the question is, how do you write a requirement when the system should be able to something only under a certain configuration? "
b'339048'	b'One-person, informal project - creating good requirements'	b"(For more backstory/explanation, see my previous question.)  I'm a middle school student working on a very, very informal project; my problem statement is as follows:     There is no way for theoreticians, researchers, and students in the field of quantum computing to simulate and test complex, large quantum circuits in an intuitive, efficient way without creating the code for the application themselves. A web application that works in popular browsers with an simple interface that could accurately produce results on the outcomes of quantum algorithms, error correction codes, entanglement, decoherence, and the other aspects of both an ideal and realistic interface would allow professionals and students alike to test their ideas and get a better understanding of the field of quantum computing.   So, as I am working through the book Code Complete, the next step was to list requirements. As I've never done this before and it is such an informal project, I am unsure if the requirements list I came up with is any good, or if there are improvements that should be made to it. So here's the list:   Takes in as input starting state of the qubits, each gate to be applied to which qubit, how many qubits should be used, and what implementation of quantum computing they'd like to test in (for decoherence time estimates). Outputs should be current state of every qubit and probability of |0> and |1> state for every qubit. Outputs should be given on the website and downloadable along with inputs in a text file.  State of qubits should be a vector, probability should be a number from 0 to 1, gates should be one of several commonly used gates or the custom gate option. Inputs for gates should be one of several buttons (pressed). Inputs for state and number of qubits should be integer input. Once user inputs data and presses the button to compute, it should not take very long to produce the answer (e.g., one minute max for 5 qubit calculations is one benchmark). Should be a website interface, with input blanks based on previous user input, i.e., create an account to save your simulations (takes in email and password), then a tab to look at previous text files from simulations and a tab to create a new simulation. Then, the user would input the number of qubits and starting state of qubits, click next and it will have you list gates for 1st qubit, click done, 2nd qubit, etc. If the option inputted is custom gate, a blank pops up where you can fill in the necessary data for the gate. When done, it transitions to a 'calculating' style screen, and then gives the result and text file to download, with an option to save and an option to start over (last option available throughout). The safety of the user's email, password, and text files must be high, as there could be important/confidential research-related information stored there. Place on site to report bugs and request improvements. Has common quantum gates available and a custom gate option. Simulates decoherence, entanglement, and other common features of quantum computing. Allows choice between ideal (no decoherence) and non-ideal (decoherence) quantum computer. Generalizable to large numbers of qubits (runs as efficiently as possible).  Documentation on-site for users. Accurate results (basic cases, at minimum, checked against accepted results. Option to make text files public/private and a location to access public simulations?  "
b'338788'	b'Correct Use Case in S/W requirements'	b"So in S/W Requirements how to know a correct use case ?  for Example :      this one here seems wrong but I'm not sure  "
b'257240'	b'Question about requirements'	b"I know that functional requirements are requirements that tell the system what to do while non-functional requirements are about quality and constraints. For below requirements, which of these will fall under non-functional or functional?   UI must be graphical in nature. I would put this under non-functional requirements because it talks about the quality of the system. I am not too sure. Users must be able to view information instantly. This could be functional but at the same time, the adverb 'instantly' could be related to performance. So that could also fall under non-functional requirements Every user should run on a separate client process. This tells the system to run a process for each user. This could be functional, although I am not too sure, as this could be related how the system is implemented.  "
b'250051'	b'More requirements in a single use case - correct?'	b"I have been arguying with a developer who insists that 1 functional request (FR) == 1 use case (UC). I think that is nonsense as there are requirements often describing situations arising from the same point - for this the use cases have alternate flows.  For example:  FR01 - User can log in FR02 - User's account will be locked after 3 incorrect passwords. FR03 - Logged user can log out   I believe all these can be nicely captured within a single use case, describing the interaction between the user and the system.  But maybe I am missing something?  EDIT: According to the book 'Use Case Modeling' from Bittner, Spence:      a use case contains a set of description of requirements, the requirements   are presented in the form of narrative rather than  an itemized list...   ... So I would say definitely more requirements can be captured within a single use case. "
b'195863'	b'Requirement gathering in an agile methodology'	b"In the great book User Stories Applied the author specified the following process for trawling requirements in the form of user stories:  Create user roles (personas) --> brainstorm user goals for each role --> Write user stories --> estimate all user stories --> prioritizes stories --> select some user stories for the first release --> write acceptance criteria for each story --> divide each story into tasks --> estimate tasks  However, I don't get why ALL stories should be estimated first and if they need to be estimated why leave the acceptance criteria out of the story till it's time to work on it?  Next thing is about the acceptance criteria itself, in the book acceptance criteria where simple statements as:   test with Master Card for payment. test with Visa for payment.   Isn't the Given... When... Then... format better for writing acceptance tests?  Last thing is about breaking user stories to tasks, why bother re-estimating the tasks when the task itself was estimated in story point? "
b'200740'	b'Use case decomposition for class registration system'	b"I am currently working on refactoring a summer camp registration system to include some new features and will also be using it as the basis for a new after-school class registration system.  For this new version of the system, I want to start out by writing use case descriptions for the registration process (and ultimately I plan to document all the use cases).  I understand that the purpose of a use case is to accomplish a user's goal, but I'm still not sure how the registration process should be divided into use cases.  Here are the options I've been thinking about:   One big 'Register Student(s) For Classes' use case Divide it into separate use cases: 'Enter Student Information', 'Select Classes', 'Pay for Registrations' Have separate use cases but also have a 'Register Student(s) For Classes' use case which 'includes' the more granular use cases   Another factor to consider is timing: parents may want to enter their students' basic information (name, age, etc.) prior to the time when registration begins, but of course some parents will complete the whole registration process in one sitting. Also, payment won't always immediately follow class selection; in some cases parents will be allowed to complete their payment later (within a 48 hour window).  I read some articles about use cases on Alistair Cockburn's website but I'm still confused as to what the guidelines are for dividing up use cases in a case like this.  My inclination is to go with option 3 since the system will have a wizard interface that could potentially guide the user through the registration from start to end, accomplishing the 'user goal' of registering his/her student(s) for classes, but the 'included' use cases could also be initiated on their own. I was also wondering if I should have a separate 'Modify Class Selections' use case for the case when the parent logs back into the system later and changes class selections on behalf of the student, or whether that should just be an alternative scenario of the 'Select Classes' use case.  What would you recommend, and why? What guidelines should be used in general when analyzing use case boundaries, beyond the idea of a 'user goal'?    Update:  I found this quote from the first chapter of Alistair Cockburn's book to be helpful:     Depending on the level of view needed at the time, the writer will   choose to describe a multi-sitting or summary goal, a single-sitting or   user goal, or a part of a user goal, or subfunction. Communicating   which of these is being described is so important that my students   have come up with two different gradients to describe them: by height   relative to sea level (above sea level, at sea level, underwater), and   by color (white, blue, indigo).   It seems to me that 'Register Student(s)' is a summary level goal, since it could potentially take multiple sittings to complete. The line is blurred in this case, but I think this idea of a summary use case suggests that my approach #3 above is a reasonable one. "
b'186986'	b'Use Cases with respect to downstream systems'	b"Use cases are primarily meant for interaction between user and a system. It could be used for interaction between system and another system. The actors are primarily roles.   It is easy to document the use cases for a front end application like a portal where in all the activities and role performing the activity could be defined. However if the system is an order management or provisioning system which a downstream system how could the use cases be documented?  Example: An order management application may responsible for processing orders for type new install , change of service , cancel , reschedule , suspend , restart etc.These transactions could be triggered by from different sources by different means (service call , entry placed in db which OM application polls , order placed in jms queue - however I assume these have no relation to use case). Once an order is received Order Management application might have to interact with different applications (credit check , shipping , provisioning , activation , billing etc) depending on the order type.      I have an application that receives data from an upstream application. My application consumes webservices exposed by multiple other applications in order to fulfill a task. The data flows through multiple applications before reaching the upstream system which sends messages to my application. The activities that my application does are install, disconnect , suspend, restore etc using multiple services that it consumes.  When I read posts on having system as actors, the primary aim seems to be demarcating and defining the interfaces properly. In the scenario above assuming the upstream system is A, my application is B and the applications that my application consumes are C, D, and E.    My aplication performs install , disconnect , restrat and suspend. Are these the activities? Will the primary actor be the system sending messages to my application? I can't think of this as a role and also there no interaction between the upstream application and my application after the point when my application recieves a message. How can I define the external applications that my application consumes? as actor or activity? or i need not care about these in use case diagram?   When you take an interaction between user and a system for shopping a product - you will list the series of interations between you and the software. However what software does internally is not specified.  Here in my case , since it is a downstream system , the upstream system sends only one message and there is no series of interaction. Hence I am in a quandry as to how I should define the scenarios. "
b'111384'	b'Writing use cases for a rather complex scenario'	b"I'm trying to improve my use-case writing skills but I'm stuck on a certain scenario.  The idea is that there are a bunch of entries in a task list (some kind of todo list). Now the user wishes to process the list (divide it amongst other lists). He can do this by answering a series of questions / completing extra data. Based on the choices of the user the system perform different actions on the task.  I'm really confused on how to write this down in a use case.  What I was thinking is something like (I'm only writing down the main success scenario):  Use Case: Process Inbox Primary Actor: User      1. User indicates he/she wants to sort his/her inbox 2. System presents the next question and provides possible actions 3. User makes choice  _steps 2-3 get repeated until inbox is empty_   The problem with this is that it's not specific enough so something else I was thinking of is to make sub use-cases for all the different steps in the question process like:  Use Case: Handle Project Level: Sub Use-case Primary Actor: System      1. System requests additional information (description, due date) from user. 2. User completes data 3. System classifies the task as a Project   What I'm puzzled about here is:   How to include this sub use-case in my main scenario in a proper way How to indicate that after this action, the user starts again from step 2 in the main use case.   I was thinking of using extensions in which I include the different sub use-cases but it's getting pretty confusing.  So to bundle this request into one question:  Can someone clear up how you would usually tackle this kind of scenarios and/or provide me a basic possible solution for this example?  Thanks in advance ;)  If anyone is interested, the flowchart of questions I'm intending to use is from David Allen's book Getting Things Done: link to diagram "
b'33722'	b'What is the difference between requirements Elicitation and Requirements Analysis in the real world?'	b'My question aim to draw a fine line between Requirements Elicitation and Requirements Analysis. What is the difference between these two? '
b'336942'	b'How to represent a function performed by the system?'	b'In use case modelling, if I have functions that have to be done by the system itself (without actors), how can I represent them?  For example, sending SMS message, compute bus route, or notify someone when a change occur. '
b'186843'	b'Agile Development &amp; Interaction with Developers'	b"I have read in few blogs that as part of agile development , the product owner closely interact with developers to state their requirements and come up with a solution. However in case of a large project (in terms of number of applications involved) involving multiple systems , is this possible? Shouldn't the project have a business analyst / solution designer in order to capture the requirements properly and come up with a solution which states how the the requirement could be fulfilled and which systems must do what activity? "
b'186868'	b'Functional Requirements / Specification and relationship to DEV and QA'	b"Functional Requirements state 'WHAT' needs to be done from a user's perspective Functional Specification state 'HOW' it needs to be done from technical standpoint.  Do QA teams focus and Functional Requirements whereas development team focus primarily on functional specification though they need to have an understanding of functional requirements?  I assume QA would sign off the product as long as the functional requirements are met irrespective of whether the functional specification is followed or not. Is my assumption correct? "
b'186995'	b'Question on System Requirement'	b"I have a scenario where a specific webservice must be consumed based on the state to setup user info. For instance if the state is NY or NJ call service A , if state is WA call service B etc. But specifying what service must be called is I guess is 'HOW' to setup a user info and not a 'WHAT'.  So should I just have single requirement stating system must have the capbality to setup up user info based on state?  EDIT: I would also like to add that the services implemented for different states might want different info to be provided in addition to basic details such as first name and last name. Should the services , input to the services , output from the service , what the program needs to do with the output etc be part of system requirements? I guess all these deal with 'HOW' more than 'WHAT' - hence is it in the requirements realm? "
b'196718'	b'In a functional requirements document, is the Assumptions section dangerous?'	b"I am currently a reviewer on a Best Practices document for Developers or Business Analysts in writing a Functional Requirements document.  This document is not necessarily a template for functional requirements documents, but a guide to what elements are necessary, optional, and dangerous to include a Functional Requirements document.  The author of the document states that:     Functional Requirements documents should NEVER have an Assumptions section!  Do not assume anything about what people know about this application or any external issues surrounding it.   I am not sure that I agree with this sentiment but don't really have the words to refute it either.  In a perfect world the analyst will have time to properly analyze every stakeholder input and every possible external issue but inevitably due to time constraints and other issues some assumptions need to be made.  Is this a bad idea because it is too easy for the intellectually lazy to declare assumptions rather than requirements?  If not then why do you think Assumptions are a good idea?  EDIT: To clarify, I am not asking about the Assumptions section of technical documentation but of an Assumptions section in a requirements document written by a non-technical business analyst. "
b'209124'	b'First step in analysing a proposed system'	b"A client asked us to automate his offline paper-based processes. He sent us a copy of the physical forms that he uses.  Our team met and discussed how the navigation should be, what major components would exist in the UI. That's it.  Problem is, we don't have actual 'written' requirements. With a lack of an actual business/system analyst in our company, what are the steps that we should take to reach the point where we are ready to start developing the system? "
b'312642'	b'Do I have to gather requirements from external stakeholders?'	b"I am making an online ordering system for a restaurant as part of an A level school project.   Do I have to include the restaurant's customers in the development stages? Do I need to have requirements from the owner of the restaurant as well as from the customers? \xf0\x9f\x98\xa3  "
b'230428'	b'Is rapid prototyping incompatible with software requirements specification?'	b"From what I've learned last term on SWE courses, a big part of it is writing documents, so it seems that a software requirements specification (SRS) should earn points for my end-of-course project.  However, I will be more comfortable if I use prototyping, i.e., I make a small thing that works for the most trivial of situations and gradually add up features and improvements. LVS 68:1996 doesn't seem to recommend mixing these two things together.   Is it possible to still maintain my preferred approach to development, and have some usable requirement specification document?  "
b'336281'	b'Can a user story have a child user story?'	b"I'm working on an update of an existing medical software and I defined user stories together with some end users. If you're not familiar with medical environments: A doctor usually has multiple patients. Each patient has multiple cases (broken leg, skin disease, etc). In medical terms, a case will be closed once the patient was treated. This might happen after a few days (illness) or sometimes weeks or months (e.g. if physiotherapy is involved). However, in most medical software, cases have to be closed after a predefined timespan (couple of days or after a month) for the billing, because most health insurances will only pay for closed cases.  The doctors in most hospitals and clinics here use a standardized form when they have a consultation with their patients, the APE Form (Annual Physical Exam).  The UI of the software is not very user friendly, therefore a big part of my work will be to improve the user experience. The UI of the cases of the current version looks very different to the APE Form and specially new doctors have troubles with the UI because of that. Therefore we want to change the UI, that it looks more like an APE Form. Now I've got the following 2 user stories and it seems that the 2nd user story is a child of the 1st one.   1st user story:     As a doctor, I expect a case in the software to look like the APE Form.   2nd user story:     As a doctor, I want to see the whole medical history in a patient case, to get a quick overview of the medical data (see attachment)    Is this correct? In all projects I've worked before, user stories were always either completly independent (means no parent) or the child of a feature. That's why I'm not sure if a user story can have another user story as a child. "
b'190399'	b'Conducting a requirements analysis interview'	b"Why do requirements interviews never pan out as they are planned - and how do I prepare for that? I'm looking for the following kind of help regarding how to prepare for these interviews and what I can pay attention to in order to make the most of them.  My information project, centered around management reporting within a firm, is currently in it's definition stage. All my stakeholders are managers of greater or lesser scope.   I had my previous two interviews planned out quite extensively, but on both occasions my interviewees both went off in completely different tangents, delivering quite interesting results. I completely ignored the question flow I had prepared, and tried to go along with the interviewees. But instead of going towards a common concept that can be developed on, I feel that I get in-depth pictures of each individual's local information requirements.  How can I conduct an interview that helps me get the participants on board and thinking towards a common solution, but doesn't inhibit their own thoughts which deliver me interesting material on data sources, formatting and communication paths? "
b'186721'	b'Level of detail in System Requirements'	b"I've read in multiple places that the requirements must not be influenced by solution and must not contain solution. So in the below example , please can you help in letting me which is correct -  Application A is interacting with Application B to install a new service / change the service type and disconnect a service. There 3 different service types 1,2 and 3. Application B does not support changing service from 1 to 2 or 1 to 3. Hence 1 must be disconnected and then 2 and 3 must be added. However service can be changed from 2 to 3 or 3 to 2 directly.   In the above case , changing the service from 1 to 2 or 1 to 3 is a system level contraint. However from an end user's perspective this is a service change.  In the above case , should I have a single system requirement stating system shall allow service to be changed for all the service types supported or should I have 2 different system requirement - 1 stating which all services can be upgraded directly and the 2nd stating in which cases service needs to be disconnected and installed? "
b'320169'	b'condensing business requirements into technical specs'	b"I work in the IT function at a large retailer and we have just started a project with the business to redesign a key system for our Website.   The business users know they want to update the system and improve it. They have some very very high level principles around how it should work but that's about it.   Management want the dev team to start 'doing stuff' because there is resource available.  I'm struggling to think about the best way to spend our time as a dev team. Sitting down with the business users hasn't yielded much more than a few more very high level principles or things they don't want it to do but certainly nothing I would consider approaching requirements.   How can you link concrete implementation of features to vague business requirements and ensure that the business will be happy with the results, given a lack of technical expertise and buy in from a business? "
b'335437'	b'Are non-functional requirements elicited in parallel with or after the functional requirements?'	b"I'm studying for the CPRE Foundation Level exam from the International Requirements Engineering Board. In the exam, there is a statement:     Quality Requirements are elicited after the Functional Requirements.   The answer to this statement is provided as false. Does this mean that quality requirements should be elicited before the functional requirements or at the same time as the functional requirements? "
b'325191'	b'When are requirements good enough for implementation'	b"I've been recently thinking about the following question:  When are requirements good enough for implementation?  I'm trying to create a checklist of some sort that can at least semi-objectively answer this question.  Here are some of my thoughts about methods and checks to ensure good requirements:   Ambiguity Poll (are the requirements precise enough for the development team)  Non-functional requirements are defined  Exclusive use of defined ubiquitous language 'Conditions of Statisfaction' are defined by the customer Business Value and Technical Value are clear and communicated   Please share your thoughts. "
b'320018'	b'Writing requirements when the task is to improve an existing implementation'	b"I have a specific case for this inquiry, but hopefully it can be generalized to anything else.  I'm working with an aircraft simulator and have been tasked to implement a module whose goal is to improve the performance, if you will, of the existing module. After reading up about how to write proper requirements (and there's company procedure and all that), I'm still a little stumped about how to go about writing a requirement.  The good news is that there's data from the aircraft being simulated, so for testing purposes there's at least some real data to compare to. And I'm aware of the FAA document AC-120-40B, but I don't believe we're trying to approach the FAA requirements since we're not trying to get FAA certification (It'd be nice to get there, but that hasn't been a stated goal)  Still I don't think 'The [software component] shall perform better than [component] from versions prior to [version] when compared to [real data]' would cut it as a good requirement.  I suppose I'm concerned with what makes something objectively better. The FAA doc does have some scenarios that cover this module, but then there might be someone who goes 'but what about X scenario!?'  And then I feel like I'm trying to prove or disprove some substance causes cancer in a variety of situations.  For others with this inquiry, the project does not have any existing performance requirements for the module.  "
b'318428'	b'Dividing software into requirement layers'	b"In order to be able to create better documentation, better tests and to start using the just gotten to know requirement traceblity matrix I'm trying to understand the different software requirement layers/levels first.  I found that there are actually three of them. Would you say that in general this is true?   Business Requirements - The purpose of the software product - the why Functional Requirements - The public APIs / UI - the what Technical Requirements - The (private) implementation (null checks, input validation, exceptions etc) - the how  "
b'108309'	b'Extracting user requirements from a person who does not know how to express himself'	b'I had an interview yesterday with a member of our organization who wanted to create a system to help him to do his job, the problem I had with him was that he had only a general idea about what he want. I tried to get more information from him by asking him specific questions which he had no answer to, such as what he expects to see in the first page when he opens the system..I told him that we will meet again in a few days because I wanted to think of a different approach to get clear requirements of him.   My question is what type of questions should I ask to get what he exactly wants, is there a guide that can help me go through this successfully? '
b'269506'	b'What is the ideal mindset for a developer participating in a requirements gathering meeting?'	b"As a mid-level developer on my team, I participate in requirements gathering/scope planning meetings of projects that I will be part of. I have been finding it difficult to come up with the questions that add value to the discussion or to my knowledge. After some self analysis, I found that knowing that there is a senior engineer in charge of the project who would lead the discussion, has caused me to be laid back in some of these discussions. But I do want to get to a point where I am entrusted with more responsibility and gain skills to handle projects on my own. Though mindset is a bit abstract term to ask about, I would like to get some advice on few things listed below:   What kind of preparation will I need to gain most out of these meetings. From observations from team members, I noticed that understanding what all systems that the project is going to impact, What business decisions will majorly impact the project design etc. are some of them. Do I need to avoid thinking about low level implementation details for every requirement. On one hand, I feel it's important to consider them because I will know about the feasibility but I also understand it hinders considering all choices. Finally, as a developer, what is something that I should not be worried about?  "
b'309512'	b'Is providing a user login a functional requirement of a system?'	b'Is providing a user login a non functional requirement?  Since this is concerned with security which is a non functional requirement, I feel that providing a user login is also non functional but again I feel that it is functional. '
b'309435'	b'&quot;Selected design can be derived from requirements&quot; - meaning and difference against traceability?'	b'ISO 12207 contains interesting points for design verification:     a) The design is correct and consistent with and traceable to   requirements.      c) Selected design can be derived from requirements.   EDIT Also under Core verification, it reads:     c) Selected code can be derived from design or requirements.   What is the difference between those?  '
b'205831'	b'Requirements specification for Multi-Channel website'	b"The company I'm working on has a RUP-like software development process, with very heavy documentation. Right now we're doing a Multi-Channel web site -it's intended to be seen in Desktop, Tablets and Smartphones- and every version of the site has a particular flow of events and content.  I don't see in RUP an artifact were this differences are documented. I'm aware that Uses Cases must be implementation agnostic -we can't mention any device specific terms- so maybe there's something in the Design discipline that serves that purpose.  If there's nothing like that in RUP, It would be nice to know how another Software Process document requirements for Multi-Channel sites. "
b'297335'	b'What is the interplay or relationship between business, functional, and system requirements?'	b'Does it make sense to say that I elicit business requirements from the end-user community, then take those business requirements to the functional team to create functional requirements, then take those functional requirements to the system engineers and architects to create the system requirements?  For example: business requirement is, user should be able to enter data into a text box. Functional requirement is that the text box can accept user data of 40 characters in length and no more and that the data is passed to a back-end application. System requirement is that the data is accepted and passed using Java to the backend Oracle DB.  Does that work? '
b'159274'	b'What standard superseded 830-1998?'	b"I have been looking into how to document software projects more formally, and I have learned about IEEE 830-1998:  Recommended Practice for Software Requirements Specifications.  However, as you can see from that link, it has been superseded.  I know that 830-1998, and probably even 830-1993, are probably just fine for use. However, if nothing else, I would like to know what standard has superseded it. In this case it may not matter, but if other standards are superseded for more technical things, I think it would be a good idea to link somewhere what standard superseded another (if it is not another one in the same line (830, in this case)).  It is worth mentioning that:   The most recent standard when searching for 'Software Requirements Specifications' or 'Software Requirements' on the IEEE Standards Association website is 830-1993, The 2004 (current) version of SWEBOK references 830-1993 (paragraph 2.5), The document's Wikipedia article doesn't mention that the standard was superseded.    TLDR:  How do you find what standard superseded another, and which one took 830-1998's place? "
b'13958'	b'How do you manage feature requests and software changes?'	b"I am a Software Engineer and over the past few years I have become the de-facto software project manager simply because there isn't one. So to keep our sanity in the R&amp;D/Engineering department, customers have become accustomed to coming to me with their requests. I have no experience in this realm so it is my first time acting as a project manager for software projects. I have managed other things but not software.  So, how do you manage software projects and mark priorities? Requests come in at infrequent intervals so we very well could be working on something for someone else and then another person comes in with a 'rush' job that needs working on. Is it easier to just say First Come, First Serve or is it the person with the most money? "
b'294402'	b'Defining and testing detailed user interface requirements'	b"I am in the process of designing and building a small web app. While implementing a first prototype I discovered that I make many unwritten assumptions about the behaviour of the interface. For example:     When the user selects a product in the product browser, the product inspector quickly slides out the left side displaying the product data. If the inspector is already opened, the data is only updated. The header background color changes with a radial animation.   Right now it's just me on the project, so I define these implicit requirements on the fly. But after every change that could break something I have to recall all of them in order to test them. I obviously should write them down somewhere.  I know unit testing, I know scenarios and personas, use-case diagrams; this seems to be something different and I don't know how to do it properly.   So, what is the usual way of defining, documenting, and also guaranteeing such requirements? Where do I put them? How do I structure them? How do I test them effectively? Should I ship them with the source code or put them in the project Wiki?  Also, these requirements are likely to change frequently, especially since I am using a rapid prototyping approach. I do not want to spend a lot of time drawing diagrams, etc. But simply dumping them into a text file without any structure seems to be a time waster as well, as soon as I have to test a specific part of the application. "
b'294541'	b'Should create and edit be two separate user stories?'	b'I often come across situations where creating and editing actions are very similar, but they are not exactly the same story. So should they be handled as separate user stories, or as one? For example, I could have:     Option A:      US A1: As a system administrator, I want to create new user accounts so that I can specify what services the users can access, and the users can access the system.      US A2: As a system administrator, I want to manage user accounts so that I can change what services the users can access and reset their passwords.   vs     Option B:      US B1: As a system administrator, I want to create and manage user accounts so that I can specify what services the users can access, and ensure that the users can make use of the system.   Is approach A or B correct, or is it simply a matter of personal preference or pragmatism depending on the complexity of the create vs edit functionality? '
b'294527'	b'What document/artifact should alert me when an old requirement changes the scope of new one?'	b'I developed a software application a year ago, I delivered it with a simple documentation.  For example, it has an special and complicated login system as requirement.  Now the customer calls and ask me to change the application for support a new kind of users, then I review (quickly) the tables, views and code that I need to change to deliver the new requirement support a new kind of users and give an estimate time, but I forgot completely that I need to refactor the special and complicated login system.  This is a big mistake because the time that I will spend in the refactor of the special and complicated login system will not be paid.  What errors have I made? and how can I avoid it in the future? A trace ability matrix gives me relations between test cases and requirements, but I need the track of old requirements in relation with new ones. '
b'155064'	b'How do I convince my team that a requirements specification is unnecessary if we adopt user-stories?'	b"We are planning to adopt user-stories to capture stakeholder 'intent' in a lightweight fashion rather than a heavy SRS (software requirements specifications). However, it seems that though they understand the value of stories, there is still a desire to 'convert' the stories into an SRS-like language with all the attributes, priorities, input, outputs, source, destination etc.  User-stories 'eliminate' the need for a formal SRS like artifact to begin with so what's the point in having an SRS? How should I convince my team (who are all very qualified CS folks by the way - both by education and practice) that the SRS would be 'eliminated' if we adopted user-stories for capturing the functional requirements of the system? (NFRs etc can be captured too, but that's not the intent of the question).  So here's my 'work-flow' argument: Capture initial requirements as user-stories and later elaborate them to use-cases (which are required to be documented at a low level i.e. describing interactions with the UI prototypes/mockups and are a deliverable post deployment). Thus going from user-stories to use-cases rather than user-stories to SRS to use-cases.  How are you all currently capturing user-stories at your workplace (if at all) and how do you suggest I 'make a case' for absence of SRS in presence of user-stories? "
b'290397'	b'Use cases and multi service architecture'	b"I've recently finished reading 'writing effective use cases' by Alistair Cockburn.  I'm looking at building a web application that sits upon 2 web services. Should I have use cases for 'web application requests data from service' that corresponds to 'user wants data from web application'.   I see 3 options.   Treat the underlying systems as actors and mention them in a whitebox fashion. E.g. user submits to webapp and webapp transmits to web service. Treat them as blackbox and write the submission use case for the user and a transmission use case for the webapp Treat it as too low of a use case, too much implementation details and just treat the webapp as a black box for use cases. Service behavior descriptions belong elsewhere.   Maybe other options. Does anyone have experience? Or a better understanding of how use cases should be written when dealing with multiple applications that are considered part of a single system. "
b'290814'	b'How should I write the &quot;Validation&quot; parts of a FURPS+ document'	b"Alistair Cockburn says in Writing Effective Use Cases, that validation requirements should not go into the use cases. However, even after reading the chapter on Missing Requirements (meaning the requirements not covered by Use Cases), I'm not sure where I should put validation and data formats, or how I should structure said document.  Given this brief use case example:        User will enter their Address   System will validate the Address      Obviously we need to specify what 'Address means'     Street1, Street2, City, SubCountry, Country, PostalCode. The first 3 fields will be 255 character strings, sub country will be iso 3166-2 validated and stored as just the 2 subcountry characters. country will be iso 3166-1 validated and stored in alpha3 format. iso 3166 codes will be displayed as their long name.   Obviously my text here is a bit meandiering and may miss bits. Where should I document this validation and data format specification? how should I write it so that it's clear? is there any in depth documentation on writing this part of the specification? "
b'185290'	b'Requirement specifications with annotations?'	b"I'm curious if there are any templates using annotations such as ambiguous, needs update and so on. Industrial or Academic does not matter.  If there are, are there any way tools available that use these annotations to show that '22% of the requirements are tagged ambiguous' and so on?  Bonus points for Academic papers on this topic (or a nearly related topic) "
b'287906'	b'Changing requirements mid-sprint'	b'I am in the middle of an agile sprint. Midway we realize that the requirement that we were working upon, could have been done in an easier fashion in a totally different way. The development work done on the current requirement wont be needed at all or needs to be changed totally. How is this handled in Agile? Even if we do communicate timeline and impact changes what is the formal method of handling this. '
b'289075'	b'Agile requirements gathering in embedded project'	b"I am working on a project where we develop an embedded application for a Linux-based device handling data from different sensors and visualizing them to the end user. We try to use Scrum process but came across different difficulties related to our and management team perception of Requirements Engineering.  Basically Scrum recommends User Stories maintained in a Backlog prioritized by the Product Owner. Scrum assumes that there is no 'requirements freeze' or single document describing the project at the start. User stories can be added 'on demand' when stake holders thinks they are necessary to have a 'releasable' software version.  On the other hand embedded system due to tight coupling with hardware need upfront specification of different system features, e.g.   HW / SW interfaces (e.g. shared memory between main CPU and FPGA) Data formats, what and how will be stored with what frequency hard real time requirements, how fast must the system react on certain events interaction with other disciplines, eg. HW, optics, mechanics   What are the best practices to handle requirements engineering in embedded systems in a lightweight (Agile) way (in contrary to e.g. automotive processes) ? "
b'145634'	b'Are using &lt;&lt;include&gt;&gt; and &lt;&lt;extend&gt;&gt; relationship in this use-case diagram actually same?'	b'I am trying to draw a UML use-case diagram to model requirements for a software project.  The two requirements I have issue to model are:   TravelAgent creates a booking for a [old] client who is requesting a home. When a new client wishes to make a booking, the TravelAgent register him/her to the system before doing the booking.   I have two approaches to model these requirements:   Modeling the first use-case as a sub-procedure of the second use-case (Figure 1).  Extending the first use-case (Figure 2).   Both approach imply that the first use-case could be perform independently, but when the second use-case is executed, the first one MUST be executed too.  Are they actually same and both correct?  P.S. As another question, since the NewClient converts to a Client after the registration, should I show the NewClient as subclass of Client or something?  Figure 1   Figure 2  '
b'112407'	b'What to do if boss always postpones major decisions about requirements and overall design?'	b"When starting a new project, my boss always avoids to make fixed decisions. He is usually saying: ok, just start to write something and be as generic as possible. When you're finished we look how we continue. His argument is basically that you never know and 'agile development'.  To keep the question as generic as possible: what do you do if your boss doesn't like to make decisions?  Just stick to it and write code that might undergo heavy refactoring and partial rewriting a few weeks later? Or keep on discussing until the boss does at least a few decisions? This is more or less my current strategy. Because it's like a law of physics, at some point something needs to be delivered. Either because the boss' boss wants to see results or because stuff is becoming ridiculous at some point.  I also observe that my boss is criticizing nearly everything. Even suggestions that are based on his own... "
b'120872'	b'How should a developer reject impossible requirements?'	b"Here's the problem I'm facing:   Quote From Project Manager:  Hey Spark, I'm assigning you the task of developing a framework that could be used for many different iOS applications. Here are the requirements:   It should be able to detect the thickness of the thumb or fingers being used to manipulate the UI. With this information, all elements of the UI should be arranged &amp; sized automatically. For a larger thumb, elements should be arranged nearer the center of the screen. For a smaller thumb, elements should be arranged nearer the corners of the screen. For a larger thumb, all fonts should be smaller. (We're assuming an adult in this case.) For a smaller thumb, all fonts should be larger. (We're assuming a younger person in this case.)   Summary:   This framework is required for creating user-friendly user interfaces programmatically. The framework should be developed in such a way that we can use for as many projects as needed, so it must also be very developer-friendly.    I am the developer given this task, so my questions are as follows:   How can I explain that these requirements are a little ridiculous? How can I explain that it would be better to concentrate on developing actual projects? How can I explain that even if this were possible, I wouldn't recommended developing such a thing? How do I say NO to this project politely, gently, and respectfully? How can I explain that even for a developer with 3 years of experience, this might not be possible?  "
b'276510'	b'Is it common practice to transform requirement specifications into predicate logic for functional programming?'	b"I've recently been assigned to work on a small project which is being implemented in Haskell. Coming from an OO/imperative background, I'm used to converting requirements/user-stories into use-cases and sequence diagram prior to coding.   However, the Haskell project that I have been assigned to, the team prefers to transform the user requirements into predicate logic proposition/statements. I was aware of logic being used in safety critical systems and formal methods for software engineering, but not so much in day to day programming. Is this common practice in the FP realm? Where can I learn more about this?   It seems like a natural way to 'model' the requirements and derive the 'functions' from the predicates along with writing down the necessary type specifications for the functions to operate on. But is that how it is done/recommended in practice or is it something peculiar to my team?  (I've tried searching extensively prior to asking this question here. Searching for 'requirements specification in functional programming' (and different keyword synonyms and combinations) doesn't lead to anything meaningful.) "
b'71621'	b'What is the difference between a non-functional requirement and a quality attribute?'	b"I'm trying to understand the difference between non-functional requirements and quality attributes. Are they the same thing?  You can find a set of quality attributes in the ISO9126 standard.  I know that each system is defined by a set of functional requirements and every of this requirements has associated one or more quality attributes. For example, suppose that you have the requirement that describes the login functionality of a system. You can associate to that requirement the attributes of security and performance.  If i say that the system can not take more than 1 second to respond, I'm talking about a constraint.  So, where the concept of non-functional requirements kicks in? Are they defined by the users? How can I identify them? "
b'179219'	b'How do you take into account usability and user requirements for your application?'	b"Our team supports BackOffice application: a mix of WinForm and WPF windows. (about 80 including dialogs). Really a kind of a Swiss Army Knife. It is used by developers, tech writers, security developers, testers.  The requirements for new features come quite often and sometimes we play Wizard of Oz to decide which GUI our users like the most. And it usually happens (I admit it can be just my subjective interpretation of the reality) that one tiny detail giving the flavor of good usability to our app requires a lot of time. This time is being spent on 'fighting' with GUI framework making it act like we need. And it very difficult to make estimations for this type of tasks (at least for me and most members of our team). Scrum poker is not a help either.  Management often considers this usability perfectionism to be a waste of time. On the other hand an accumulated affect of features where each has some little usability flaw frustrates users. But the same users want frequent releases and instant bug fixes. Hence, no way to get the positive feedback: there is always somebody who is snuffy.  I constantly feel myself as competing with ourselves: more features -> more bugs/tasks/architecture. We are trying to outrun the cart we are pushing. New technologies arrive and some of them can potentially help to improve the design or decrease task implementation time but these technologies require learning, prototyping and so on.  Well, that was a story. And now is the question:   How do you balance between time pressure, product quality, users and management satisfaction? When and how do you decide to leave the problem with not a perfect but to some extent acceptable solution, how often do you make these decisions? How do you do with your own satisfaction? What are your priorities?   P.S. Please keep in mind, we are a BackOffice team, we have neither dedicated technical writer nor GUI designer. The tester have joined us recently. We've much work to do and much freedom concerning 'how'. I like it because it fosters creativity but I don't want to become too nerdy perfectionist. "
b'120183'	b'Quick and Good: ( Requirement -&gt; Validation -&gt; Design ) for self use?'	b"How to casually do the required Software Engineering and designing?  I am an inexperienced developer and face the following problem:   My company is a start up and has no fix Software engineering systems. I am assigned tasks with not very clear and conflicting requirements. I don't have to follow any designs or verify requirements officially.   Problem:   I code all day and finally get stuck where requirement conflicts and I have to start over again. I can-not spend a lot of time doing proper SRS or SDD.   How should I:   List out Requirements for myself. (Not an official document) How to verify and validate the requirements? How to visualize them?  How to design them with minimum effort? (As its going to be with me only)   I don't want to waste my time coding something that's gonna collapse according to requirement conflict or something!  I don't want to compromise with quality but don't want to re-write everything on some change that I didn't expected.  I imagine making a diagram for my thought process that will show me conflict in the diagram itself, then finally correcting the diagram - I decide my design and structure my code in terms of interfaces or something.  And then finally start implementing my design.  I am able to sense the lack of systematic approach, but don't know how to proceed!  How can I have diagram that I talked about for requirement verification? "
b'214616'	b'What to call requirements that are &quot;assumed&quot;/&quot;invisible&quot;/&quot;very obvious&quot;'	b"I'm looking for an umbrella term for all the nitty-gritty requirements that it's helpful to have specified up front but which the client never thinks about in his excitement about the product.  In the client's mind, they think of the headline requirements, the main user stories such as 'I need to be able to view the status of all equipment' and 'I need to receive automatically any notification equipment failure'. But at times the mundane ones are there but the client never mentions them until the result differs from his unspoken expectations: 'Well of course a user must be able to change his own password' and 'Of course the user's session must time out after 30 mins'   Any development team can anticipate what's likely to be needed but is there a name for this category of requirements? Obvious/infrastructural/boring/details?  "
b'281814'	b'How to help you client into making better requirements for you?'	b"One of the most difficult and critical part of a project is to get good requirements from your client (internal or otherwise).  I understand by 'good requirement' one that is not so high-level that's barely tangible to the system, and not so low-level that it'll constraint the system creation with really needing it (it happens when your client has some knowledge in programming).  So, firstly how to guide you client into giving precise information that will help you at specification/implementation?  And finally, how one can tell at Requirement gathering if you have a mature enough requirement? "
b'280120'	b'Should I consider uncertain future requirement while development?'	b"I have one text box across multiple pages which is used to enter multiple customerids (as comma separated) . But in current page due to some subsequent implementation difficulties we make it as customerid so that user can enter only one customer not multiple customerids as comma separated.  But coding styles and naming of variables across all pages are same since we are assuming that multiple customerids could be entered in future.  we are having array instead of string to store customerid as given below:  customerIds.push(tbxval);    whereas customerids array always having only one element inside that as of now in that particular page.  I guess if that future requirement not asked from product owner, this code could make some problem or at least until that requirements comes.  But I'm not sure what kind of negative or positive impact it could make. "
b'144437'	b'Which stages of the requirements analysis process in mobile requirements engineering are the most challenging ones?'	b"I'm doing a research on formulating a requirements analysis model as a stage  of requirements engineering for mobile-application development by considering the limitations and the needs of it ( agility and etc.. .), what I'm trying to figure out is that which parts of this process (requirements analysis for mobile development) are the most challenging ones ( so i can focus more on) , and if there is any stage that u think I need to include or exclude (exp. some may think a quality plan may or may not be necessary and etc.)  to make it more clear below is the list of few of the areas in which I can focus on ( by the way your suggestions can be anything out of the below list.)  -Requirements specification -Prototyping  -Requirements Prioritization -Focusing on quality functions  "
b'171295'	b'How to manage and estimate unstructured requirements received from customers'	b"A lot of the times during the bidding phase of a project I receive a software system's requirements from our potential customers in a very unstructured format from various sources [email, word documents, excel]. It is usually a bunch of 'product development' guys from the customer's side who come up with these 'proposed solutions' to the business problems they have. While they are the experts at the business domain, a lot of the times they don't have the solutions right.  This results in   multiple versions of the same requirement mixing up of two requirements into one a few versions of the requirement later down the line, the requirements which were combined together get separated out again, each taking with it some of the new additions   How do you work with such requirements coming in and sort them out into proper use cases and before development begins? What tools can we use to track a particular requirement's history, from the first time it was conceived till the time it gets crystallized into a proper use case? Estimating work against requirements received in such a fashion is a nightmare which ends up in making mistakes in understanding the requirement correctly and estimating the effort against it correctly.  Once we win the project, then the customers have given some more thought to their requirements and have been able to articulate it properly. What happens in this case is that some functionality gets dropped, some enhanced, some take a whole new turn. This basically can nullify some of the work item's estimates that were made before the project was won. I would be interested in knowing if there is any system by which we can build a tree of a particular requirement and how each branch resulted in a different estimate.  Any tips, tools, tricks to make this activity more manageable? I'm just trying to get some insights from someone more experienced than I am in requirements management and effort estimation. "
b'278266'	b'How to perform MoSCoW prioritization in Scrum?'	b'In Scrum, if the requirements are gather throughout the software development life cycle (SDLC), then when and how can you perform MoSCoW prioritization? '
b'278249'	b'Requirements Gathering in SCRUM. Acceptable to talk about High Level requirements in first sprint?'	b'In Scrum at what stage the requirements are gathered?  I am writing a report about my project but I am having trouble deciding where to put the High Level requirements.  I am thinking of having a section called Sprint 0. Where I have sub headings    Analysis Design Implementation  Testing Evaluation   and in the analysis I talk about all the requirements gathered so far meaning an overview of what the system must do.   The other option is to have a section called product backlog where I analyse the problem and write the requirements that were gathered in the meeting with the client.  What is the ideal approach to this? '
b'276963'	b'Include system timer in use case diagram'	b'  Here in my use case diagram, an sms will be sent to a referenced person by the applicant automatically by the system when an applicant fills up and submits a form. Here as the SMS sending is performed by the system, is it right to include system timer performing sms sending in the use case diagram shown below? If not, what should I replace it with.? '
b'276814'	b'Using NLP can we create a summary of functional specification'	b'Just thinking that is it somehow possible by using Language processing APIs to extract a must have points or an intelligent summary from documents like functional specifications .. '
b'275231'	b'Phrasing a requirement about filename encodings'	b"I am in the process of writing a requirements spec, and I have a dilemma in phrasing a piece of the requirements.  Scenario: We download files from a website and the downloaded files need to be attached to an item in the CM tool we have. The downloaded files contain names which can be ASCII, ISO-8859-1, Japanese, etc.  In the phrasing below, does 'non-ASCII' cover all situations?     The downloaded file name may contain non-ASCII characters and processing of this shall not crash the application  "
b'274320'	b'How &quot;Best&quot; to capture State Transitions in a formal software requirements specification'	b"Suppose you have a state transition diagram. What is the best way to 'Formally' write requirement(s) that capture the state transitions depicted in the diagram.  Over the years I have used two approaches and both work, but each time I work with new people there seems to be disagreements on how best to 'Formally' capture the state transitions. 'Formally' capture is required because traceability matrices are used that map to 'Test Cases' and 'Software Units (ie. Classes and/or Modules)'.  Method 1   The system shall transition between states as depicted in Figure 1 XYZ Transition Diagram.   OR  Method 2  Look at the diagram and write a requirement for each transition.   Upon power up the system shall start in the Comms-Init State. Upon establishing communications the system shall transition to the Initialization State. (ie. A requirement for each state transition)   The benefit to method 1 is that it is one requirement and very easy to write.  The con to method 1 is that pictures don't work well with traceability matrices and it is more difficult to verify that you've covered all the transitions.  The benefit to method 2 is that each transition can be mapped to the explicit test cases and modules in their respective traceability matrices.  The con is that it is more work writing all the extra requirements and sometimes putting into clear and accurate words what the picture clearly shows is not as easy as it sounds. Also, the additional requirements seem to add more clutter as opposed to value, which makes reading the requirements less understandable rather than more.  While I suspect the answer in the simple case like I described is that it depends on the project or it doesn't really matter. The issue on my new project is that things are slightly more complicated (there are modes in addition to states that interplay). Thus, method 2 will potentially explode into a lot of requirements.   So I am asking the question because this is one of those 'practices' that I have been doing without really knowing 'Why'.  I don't generally like to work that way, so I am hoping that someone can point out valid reasons why one approach is 'more proper' than the other and in the process I will learn the 'Why', which will let me understand how best to tailor for the slightly more complicated scenarios. "
b'272610'	b'How can user stories not contain requirements (when written on a card) and still be implementable'	b"I've been told 'User Stories are not requirements, it is just a reminder of what customer wants, you cannot put requirements within a story'. But let's take for an example that a customer wants a different processing for different credit cards. There are strict requirements that must be implemented and known so that test cases can be written. Where should requirements go if not in the user story?   How can developers develop from a story if there are no lower requirements? How testers can write test cases (detailed ones) based on a user story? Where to requirements like DB constraints, fields validation etc. live outside of the user story? "
b'272231'	b'In what case a use case should be written'	b'I am trying to figure out some questions to help me decide whether a use case should be written for that requirement or not. Is it neccesesary to have a use case for each requirement?      E.g I have a functional requirement which is about creating a new DB table for the new parameters that will be selected from the UI. The FR also states the what ariables should present each parameter in the table etc.   '
b'62965'	b'What is the definition of user classes, with respect to software use?'	b"I'm writing the Software Requirement Specification document for a piece of software that I am developing. A part of the SRS is the identification of the user class.   Can somebody please give or refer me to definition of a user class as it relates to a software product? "
b'185868'	b'Best Practice For Usage of Shall and Must While Writing Requirements'	b"I sent out an email earlier reminding our developers that, the use of the word, 'Shall', in your derived requirements should not follow over to your functional requirements.   When writing functional requirements the word, 'Must', is used to describe the function a derived requirement must do.  Derived = System Shall be requirement  Functional = System must do requirment  It was sent back by one of our Seniors that, that was wrong and that shall should be used in every requirement.    Am I wrong here and Shall should be used in every requirement.  I haven't been able to find anything to back that up. "
b'267109'	b'Can BDD and Lean methodologies be used together?'	b"I was chatting with my product manager last week and he was bemoaning the lack of progress on our product.  It's a fair criticism, too.  So we got to talking about to describe the writing of requirements.  I'm a big fan of BDD and using something like the Gherkin syntax to describe how the system should behave in terms of a user or actor.  He was pretty dismissive of BDD and said we should be using Lean methodologies like SBCE (set based concurrent engineering) and other stuff which I don't know a massive amount about given I've not read much on Lean practices so far.  Are these two methodologies mutually exclusive? If not BDD then there would need to be some other way of describing what the system should do.  Does Lean have its own language for requirements? "
b'197746'	b'What is the benefit of the MoSCoW technique?'	b"I do not see how the MoSCoW Method's 'Must, Should, Could, Would' prioritisation is better that simply 1,2,3,4? If I receive the requirements from the customer, they already are prioritised, usually using this range. Also what is so interesting on this MoSCoW thing, why it is so 'famous'? "
b'216817'	b'Requirement refinement between two levels of specification'	b"I am currently working on the definition of the documentation architecture of a system, from customers needs to software/hardware requirements. I encounter a big problem with the level of refinement of requirements.  The classic architecture is : PTS --> SSS --> SSDD --> SRS/HRS  with PTS : Purshaser Technical Specification SSS : Supplier System Specification SSDD : System Segment Design Description SRS / HRS : Software / Hardware Requirement Specification.  Requirements from PTS are reworked in SSS, this document only expressed the needs (no design requirements are defined at this level). Then, the system design is described in SSDD : we allocate requirements from the SSS to functions from the design and functions are then allocated to component (Software or hardware) (we are still at the SSDD level). Finally, for each component, we write one SRS or one HRS. Requirements in SRS or HRS are refinement of requirements from SSS (and traceability matrix are made between these two levels).  My problem is the following one :  Our system is a complex one, and some of the requirements in the SSS needs to be refined twice to be at the right level in the SRS (means that software people can understand the requirement to make their coding). But, with this document architecture, I can only refine once the requirements from the SSS. The second problem is that only a part of the requirements from the SSS needs to be refined twice. The other part only need one refinement.  On the picture below, the green boxes are requirements at the right level for SRS or HRS. And purple boxes are intermediate requirements which can not be included in SSS since they are design requirements. Where can I put these purple requirements ??  Is there someone who has already encountered this problem ? Should I write two documents at SRS level ? Should I include intermediate requirements in SSDD ? Should I includes the two refinement levels (purple and green) in the same SRS document (not sure that's possible since a SRS is only for one component) ???  Thanks for your help and expertise ;-)   "
b'261809'	b'What is meant by the term &#39;System requirement&#39; and how does that relate to &#39;Functional requirement&#39;?'	b"What is the difference between a Functional Requirement and a System Requirement?   As I know, the term 'Functional requirement' refers to a requirement which describes a function that needs to be implemented to solve a problem.  But what is meant by the term 'System requirement' and how does that relate to 'Functional requirement'? "
b'259942'	b'Dealing with conflicting project requirements'	b"I tried to find an existing topic on this subject but I could not find one that was a good fit, my apologies if I was not thorough enough.  Basically we have a web application that serves multiple clients at multiple corporations (single code base - 'forked' where necessary to accommodate different needs).  This project is a fairly new one as we previously used to make a separate copy of the project per client and maintain it individually. However now that the company is growing, we are adding more staff and also attempting to minimize the code base and relying on configurations to accommodate different needs where possible, as opposed to 'forking'.  The problem I am dealing with now is that our customer relations lady (and it would appear 99% of the rest of the team) really does not understand that changing things on the fly constantly (without due consideration for the impact thereof or the conflicts that may arise) is not the right way about doing things. I mean this completely in the sense of conflicting requirements. We are pretty good at the rest (bugs, testing, scoping etc.)  For instance; Say client X, wants a particular button red but client Y, wants the same button blue (but has possibly requested this change years after X asked for it.) Currently we just make the button blue, until X asks for it to be red again.  This is happening more regularly as our user base is growing. Even worse is when two clients in the same company want conflicting changes.  I am really just a junior developer here, but I see this problem and no one seems to be too perturbed by it, despite my constant nagging. But lately these issues have been falling into MY lap and wasting MY time.  Could anyone please suggest a way that I can try and manage these (even if just for myself).  We currently use OTRS as a client facing ticketing system (for support and requests) and VSO (TFS) for internal tasks and bugs (sometimes created as part of an OTRS request).   I administer both systems, but currently trying to find when last a request came in from a particular client to change a particular button to a particular color in version control history or tickets/emails is just not a very comprehensive nor efficient solution (also the button/color analogy is a really simplified version).  I am just starting to feel like we are headed round in circles and are eventually just going to crash. "
b'258538'	b'Codifying architecture in requirements'	b"For the development of a next generation of a medical monitoring device consisting of several dedicated hardware systems with embedded software, I am looking at the requirements for the current generation of the device to see what can be re-used. During this process, I cam across some requirements that explicitly specify a certain architecture for one of the sub-systems and requirements that presume that particular architecture.  My question is, is it correct to have such requirements, or should such design decisions really be relegated to an architectural design? I find the requirements that presume an architecture the most troublesome, as they do have merit within that architecture but might be nonsense when a different design had been chosen and it is not always possible to rewrite them in an architecture-independent way.  Some paraphrased examples of the requirements:     The system shall be composed of hardware modules X, Y and Z.   Rationale: This is how we have done it before and we didn't experience any trouble with it.   My problem with it: The end-user wouldn't care how we divide up the system, as long as it is not a burden to work with. I also couldn't see any other stakeholders that would have a vested interest here.     Hardware module X shall be physically detachable from hardware module Y.   Rationale: This allows for easier storage of the system and to allow the user to exchange the more fragile module X in case of problems.   My problem: The intent of the requirement I can agree with and is something the end-user might care about, but I don't see how a requirement can refer to a hardware module whose existence is subject to a design decision that isn't a requirement.     Hardware module Y shall contain software function S.   Rationale: Software function S needs quite a lot of processing power that is only available in module Y.   My problem: It could also have been decided to give hardware module X a more capable processor and let it handle software function S.  An additional problem is that at least some of us have a strong belief that all module/software requirements must be traceable to a system requirement, which might not be true any more if those architecture-related requirements get thrown out. "
b'257989'	b'Seeking advice writing functional requirements'	b"I inherited a project that I've been maintaining for approximately a year now. The project primarily revolves around performing various financial calculations for the end user. It's roughly 100,000 lines of spaghetti code held together with duct tape and gumption. I've been slowly going through and refactoring the code as I have to make changes to it, and adding inline comments where helpful, but there's no formal documentation.  I've been tasks with rewriting the software on our company's new platform (I know, the worst decision a person can ever make is a complete rewrite, but in this case it's necessary, as the entire architecture and framework involved is changing). As the first step of this, I need to come up with a set of functional requirements. However, I'm at something of a loss on where to start and how to go about it. The scope of it is just so enormous that I'm not even sure where to begin.   Has anyone else had a similar experience? Where did you start with the documentation for the new project? Are there any resources out there I could consult? I could write the technical specifications of it today without an issue, but I've never before had to write functional requirements.  I know it's not normally part of the developer's responsibility to write functional requirements - someone in the business department should do this. However, it was apparently decided I was the best person for the job as to most of the people in our business department, the way it works is just 'magic'.  "
b'257057'	b'Which approach is right doing use case first or classes first ? why?'	b'There are people who prefer to do use cases first and then do the classes, but there are also some who prefer to do class diagram first and then use cases. So is it personal choice for convenience? What are the pros and cons of the above ways? '
b'255322'	b'BDD based on 1-liner requirements'	b"In our team, the product owner only gives us a 1-liner summary. The developers then come up with a PoC, which the product owner reviews and the cycle repeats.   The challenge here is 2-fold:   Time: We have to create the PoCs asap, so that they can be reviewed The Developers are actually defining the look and feel of the product - a lot of UI PoC and some controller development to back it up. But BDD doesn't gel into the 'creative' process of product envisioning. Typically, BDD requires you to take a product specification, and then codify it using Jasmine etc.    Can any BDD experts please suggest a way to blend the creative thinking process with BDD?   "
b'254643'	b'Gathering requirements from confusing co-worker'	b"I'm working at my first software internship, and it's great so far. One problem I'm having, however, is getting clear requirements from my co-worker (we'll call him Person A) who assigns projects. Normally, I get requirements from a co-worker/manager, design/code/test my changes, and eventually commit them for integration in our product. The problem is that, fairly often, it is virtually impossible to get clear requirements from Person A. I will ask questions to better understand what problem is being solved, and one of the following often happens:   Person A will interrupt mid-sentence to think out loud, derailing the current conversation. Sometimes this is for good reason. Example:     Me: 'So if there should be a table mapping Bazzes to Foos, what if there were-'      Person A: 'Actually, I wonder if we actually need to add a BizzleContainer in this  here.'      [I wait a few minutes for A to think through their unrelated thought, and try to help solve it.]    This will repeat a few times, and by the time the conversation is done, I'm more confused than when we started and half an hour has gone by, so I don't want to waste the person's time any longer. Note that I wouldn't mind if the interruption was related to the current topic, but it seems that interrupting someone to take a conversation down a completely different path is poor form.   Person A often barely understands the requirements.   These factors add up to wasting a lot of development time based on simple misunderstandings of what needs to be done.  Co-workers B and C are capable of clearly expressing what needs to be done, but they are often overrun with demands for their time. So rather than annoy B and C to get requirements clarifications, co-workers often go to A, and get less than satisfactory results.  How do you wring clear, correct requirements from someone who understands them but does not have the inclination to take the time/effort to explain what they actually are? "
b'254232'	b'How do developers verify that software requirement changes in one system do not violate a requirement of downstream software systems?'	b"In my work, I do requirements gathering, analysis and design of business solutions in addition to coding.  There are multiple software systems and packages, and developers are expected to work on any of them, instead of being assigned to make changes to only 1 system or just a few systems.   How developers ensure they have captured all of the necessary requirements and resolved any conflicting requirements?  An example of this type of scenario:  Bob the developer is asked to modify the problem ticket system for a hypothetical utility repair business.  They contract with a local utility company to provide this service.  The old system provides a mechanism for an external customer to create a ticket indicating a problem with utility service at a particular address.  There is a scheduling system and an invoicing system that is dependent on this data.  Bob's new project is to modify the ticket placement system to allow for multiple addresses to entered by a landlord or other end customer with multiple properties.  The invoicing system bills per ticket, but should be modified to bill per address.  What practices would help Bob discover that the invoicing system needs to be changed as well?  How might Bob discover what other systems in his company might need to be changed in order to support the new changes\\business model?  Let's say there is a documented specification for each system involved, but there are many systems and Bob is not familiar with all of them.  End of example.  We're often in this scenario, and we do have design reviews but management places ultimate responsibility for any defects (business process or software process) on the developer who is doing the design and the work.    Some organizations seem to be better at this than others.  How do they manage to detect and solve conflicting or incomplete requirements across software systems?  We currently have a lot of tribal knowledge and just a few developers who understand the entire business and software chain.  This seems highly ineffective and leads to problems at the requirements level. "
b'253828'	b'How should I design a wizard for generating requirements and documentation'	b"I'm currently working in an industry where extensive documentation is required, but the apps I'm writing are all pretty much cookie cutter at a high level. What I'd like to do is build an app that asks a series of questions regarding business rules and marketing requirements to generate a requirements spec.  For example, there might be a question set that asks 'Does the user need to enter their age?' and a follow-up question of 'What is the minimum age requirement?' If the inputs are 'yes' and '18', then this app will generate requirements that look something like this:  'The registration form shall include an age selector' 'The registration form shall throw an error if the selected age is less than 18'  Later on down the line, I'd like to extend this to do additional things like generate test cases and even code, but the idea is the same: generate some output based on rules determined by answering a set of questions.  Are there any patterns I could research to better design the architecture of such an application? Is this something that I should be modeling as a finite state machine? "
b'252228'	b'How does requirements management work in the long term with Agile projects?'	b"Requirements Management in the short term for Agile projects seems like a solved problem to me.  From the Scrum angle new requirements or changes to existing requirements are delivered through User Stories.  And User Stories grouped under an Epic or Feature facilitate the delivery of larger more complex requirements.  Of course, a User Story isn't technically a requirements document.  It is a manageable grouping of work which maps to what is often called a Vertical Slice of functionality.  And the scope of these stories can be defined unambiguously through the use of Acceptance Criteria (AC).  So, although User Stories aren't formal requirements, browsing through them can give you a pretty clear idea of their underlying requirements.  In the short term.  I say in the short term because, as a project progresses, the number of User Stories increases.  Thus, browsing through an ever increasing list of Stories to find a Requirement becomes less and less efficient over time.  This problem is compounded when you consider User Stories that expand on, supersede, or even negate previous Stories.  Now, imagine a 2 year gap between development iterations on a project (stable in production).  The original team is gone and so is all their knowledge.    If the original team knew this was going to happen (eg, it's the nature of the business), then what measures could they take to help subsequent teams?  Sure, the backlog will provide some information, but it's hardly in an easily browsable form.  So, what can be done to help subsequent teams understand the state of the project, including why and how it got there?  In my experience, the following things don't work:   Backlog grooming to delete or update previous User Stories so that the Backlog can be read as a requirements document. Documentation Sprints where team members are tasked with documenting the current state of the system. Documentation through Behaviour Tests.  This approach is the only one I have seen come close to working.  Unfortunately, Coded Behaviour tests are victims the Naming Problem.  Although the tests might properly document the system, getting a fluctuating team of developers to write their tests following the same Domain terminology, wording, and style is almost impossible.   So, to reiterate:  How does one manage Agile project Requirements in the long term? "
b'241597'	b'Modelling highly specific business requirements'	b"How can one go about modelling highly specific business requirements, which have no precedent in the system? Take for example the following requirement:   When a purchase order contains N lines, is over X value in total and is being recorded against project Y, an email needs to be sent to persons A and B with the details   This requirement supplements other requirements surrounding purchase orders, but comes in at a much later date in response to some ongoing problem elsewhere in the business.  Persons A and B are not part of any role or group in the system, and don't hold any specific responsibility; they are simply the two people the business has appointed to receive these emails in this very specific case. Projects are also data driven, so project Y has no special properties to distinguish it from any other project. The only way to identify it is to compare its identifier to a magic number.  How can one go about modelling this kind of case without introducing too much additional complexity? That I can think of right now, there are a couple of options.   Perform the checks and actions inline with the existing code. Here we find the correct spot in the code, check the conditions in the requirement and send the emails to hardcoded addresses. Of course this is fraught with issues. At the very least it stops working if one of these people leaves or changes their email address. At worst you have to ensure that any tests and test data are aware that additional actions are taken for a specific set of criteria. Introduce some form of events system. Here we introduce an eventing system, so that we might react to some event, and fulfil the requirement outside of the usual path of execution. This sounds like a cleaner solution than option 1, but the work involved is ultimately probably slightly overkill for this one small requirement. That said, having it in place does allow the system to handle these kinds of specific requirements consistently and easily in the future.   Are there any other (good/better) ways of handling highly specific requirements? I mean other than telling the other parts of the business no! "
b'241340'	b'Who should have full visibility of all (non-data) requirements information?'	b"I work at a smallish mid-size company where requirements are sometimes nothing more than an email or brief meeting with a subject matter manager requiring some new feature.  Should a programmer working on a feature reasonably expect to have access to such 'request emails' and other requirements information? Is it more appropriate for a 'program manager' (PGM) to rewrite all requirements before sharing with programmers?  The company is not technology-centric and has between 50 and 250 employees. (fewer than 10 programmers in sum)  Our project management 'software' consists of a 'TODO.txt' checked into source control in '/doc/'.    Note: This is nothing to do with 'sensitive data access'.  Unless a particular subject matter manager's style of email correspondence is top secret.    Given the suggested duplicate, perhaps this could be a turf war, as the PGM would like to specify HOW.  Whereas WHY is absent and WHAT is muddled by the time it gets through to the programmer(s)...  Basically.  Should specification be transparent to programmers?  Perhaps a history of requirements might exist.  Shouldn't a programmer be able to see that history of reqs if/when they can tell something is hinky in the spec?    This isn't a question about organizing requirements.  It is a question about WHO should have full VISIBILITY of requirements.  I'd propose it should be ALL STAKEHOLDERS.  Please point out where I'm wrong here.   "
b'223242'	b'How to consider the login function collecting requirements of an application? is it a user requirement?'	b'I am working on an application that expected to the user logs in when the application is started (as for example it is in Skype: the user open the application and appear to him a login mask when he insert the username and password to start work with the application)  Now I am preparing some use case diagram and I am collecting the application requirements (I have to write some documentation)  Can I consider it as a user requirement? Or what is it? '
b'239018'	b'How do you get relevant and useful information out of a client in regards to a job?'	b"A brief background on this specific question:     After meeting with a client and hearing all of their requests,   requirements, and other comments about a specific software job,   planning out the software functionality, design, and basic user experience,   the client comes back with a comment regarding, 'That is not what we   are looking for. You can't do what we want to do.'   Now, I understand the concept that not everyone understands tech, and that some people are more visual than others and may need to see things before they can be sure about something.  I also understand the process of revisions and other modifications to meet specific functionality demands or requirements that may only come up after you start putting things together. I mean, if everyone got it right in version 1.0, imagine how great a world this would be!  Given: There is no magic formula for a guaranteed success rate when a lot of the work is artistic in the sense that the same set of directions can be interpreted differently by different people.  I'm aware that asking the right questions is important, and I have done some research about what questions others are asking in similar jobs. I also have previous experience with clients (this isn't my first job), and through it all, I have developed my own little system for getting this information-- which has had a 99% success rate up to this point. Usually if I don't get it right the first time, it's fixed during the revision and modification process. I know I'm not perfect, but I've never really had a client flat out refuse what they asked for...  So how do you get relevant and useful information out of a client in regards to job requirements and specifics? "
b'118376'	b'Functional or non-functional requirement?'	b"I'm wondering about functional or non-functional requirements. I have found lot of different definitions for those terms and I can't assign some of my requirement to proper category.  I'm wondering about requirements that aren't connected with some action or have some additional conditions, for example:   On the list of selected devices, device can be repeated. Database must contain at least 100 items Currency of some value must be in USD dollar. Device must have a name and power consumption value in Watts.   are those requirements functional or non-functional ? "
b'182087'	b'Are there differences between Functionality and Functional Requirements'	b"I'm writing some documentation in a project in a tool. In this tool of mine, and write in specific area, I have here use Case, Business Rule, N-Diagram Types, and Functionality and Functional Requirements.  So I got me wondering, Are there differences between Functionality and Functional Requirements?  In my vision, a Functionality a implementation of a Functional Requirement, is it correct? What other differences one can find between them?  "
b'235033'	b'What process will you use to clarify functional requirements and to gather non-functional requirements?'	b"I am confused with what's the different between clarify and gather. I know using interview, observe or questionnaire can to elicit the requirement we want, but how to clarify the functional requirement?  "
b'228371'	b'Does anyone have experience with a difficult customer?'	b"We have a reoccurring conflict with one of our larger and strategically important customers.  The company (let's call them 'C' for now) sells and distributes technical articles, everything from hardware components to hairdryers, and has more than 400000 products in their catalog.  The product owner, who is also the head of product documentation and internal software at 'C', has at some point in the 90's taken a course in software testing, and is now writing 'Requirement specifications' as user tests. These are often contradictory and error prone, but she maintains that what she writes is what she want's, until she writes something else (in same imperative but ambiguous and abstract format). Furthermore, she demands a final budget for the project, and is unwilling to work in smaller iterations of budgeting.   I'm looking for hints on how to control the development-process (and our own economy) and still provide the customer with a product that gives the company most value-for-money. Normally, I'd start a project by identifying goals of the project and business use-cases of the organization - and then deriving scope from those goals, using User-stories. The details (specifications) of how user-stories should be implemented, is decided at specifications prior to the sprint including the respective user-stories. This has repeatedly proven to result in better products and greater ROI for the customers.  Does anyone have experience of knowledge of techniques that can be used to 'Reverse engineer' imperative user-tests, or any other input on how to handle the situation?   Historically, she has been allowed to completely dominate the development process, which has blown our budgets and taught her that she is in control of our process. Our management has now asked me to control (and defend) the development process. They told 'C' that there will be used no more hours than the agreed budget, regardless of how 'done' she (the product owner) feels that we are, which of course will be my leverage. She will become defensive, even aggressive to get things her way - any sound arguments based on professional reference or experience would be of help.    Follow up:  I thought I'd follow up in case anyone stumbled across this post with similar problems:  We have turned the communication around, and are expecting to deliver the next project within budget and on time (I'll edit this post again if hell breaks loose later on).  Initially, I focused on creating trust between me and the Product Owner. That meant choosing the relevant battles, and presenting myself as her tool to get most value for her money. Requirements are still expressed in more or less the same way (although she is open for input about syntax, she is firm about the format: Word Documents and Emails), but we are slowly trading control with visibility regarding the development process.   I managed to persuade her to participate in weekly meetings for project status, backlog grooming and prioritization. Between each meeting, she gets the chance to test the newest revision, which makes her test-feedback what used to be an object for discussion, the most valuable feedback for the backlog grooming and prioritization. By having a head-to-head talk about the feedback from the tests, we're able to 'weed out' misunderstandings, contradictions and scope creep before it leaks into development.  The trust between us enabled us to have a constructive talk about each others organizations and the processes and intentions of these, which opened my eyes to quite a big part of the problems being our lack of capacity (professionally, theoretically, and methodically).   The product owner has called management to personally compliment the progress we are making, so I'm calling success on these first steps - but constantly watching the scope and progress, as to not 'rest on ones laurels' "
b'232507'	b'Communicating with Vendors'	b"We are a small software team (as far as programmers go) and have a team of vendors on the other side of the world that program for us. We own the product, and simply dictate to them some of the tasks to work on. I am one of the lead programmers and also the project manager of this particular project, so I am a programming and fulfilling requirements as well as outlining them.   I am having difficulties communicating with the vendors exactly what is expected of them. Let me start by saying we are fairly new at this and I don't have a lot of experience leading a team of vendors, especially when it is difficult to communicate verbally in English, and they work during my night and then I come into the code they pushed while I was asleep. Problem is, I end up spending a lot of my day just checking what they did, and fixing bugs and cases they didn't think of. They're not thinkers, they do exactly what I tell them, and nothing more or less. Most of the time, I feel like it would just be easier to do it myself.  My question is how do most teams like this communicate? Right now we have weekly telephone meetings and I email them nightly the progress I made, as well as what is expected of them. When I think 'how to communicate with other programmers' the answer seems to be UML. That's what it is. I certainly am very familiar with UML, learned it in school, but have never really used it on the job. It's just not something we do, in fact generally the requirements for a task are in my manager's head. I can get those into a spreadsheet or a flowchart, but never an official diagram.  Is UML something teams like this actually use? In all reality, I feel like I learned a lot in school that no one actually does. If so, which diagrams are the most useful/used? From my knowledge, in this project where we are revamping something that exists in the system already from the ground up, I feel like the following would be a good approach:   Create a quick ER diagram containing any added/updated/used entities in the project. Create a detailed use case model, clearly defining and numbering each use case. Create a sequence diagram for the complex use cases (as well as their alternate flows) to show exactly what is expected each step of the way.   I feel like this would be a good start. We don't really do a good job of capturing requirements currently, we kind of just start coding based on something we drew up on a whiteboard. Obviously this needs to change as well, to avoid getting a week into a project and realize that we forgot something.  What are your suggestions/experience? Unfortunately we're sort of flying blind and just don't have anyone experienced enough in these situations to go to. I want the project to be a success, but I can't keep having the vendors (understandably) making mistakes because I assume they know X or Y. How can I utilize them more effectively? "
b'229632'	b'How do I document roles and responsiblites'	b"When working on a requirements document, how do I capture system roles and responsibilities?   E.g. 'I'm a manager and I will only use the system to generate reports on xyz'.  I was looking for an example online but couldn't find one. "
b'229095'	b'how to filter &#39;must-have&#39; requirements from &#39;nice-to-have&#39; requirements'	b"In building a software from scratch, there is necessity to conduct detailed needs assessment and find out what the clients/stakeholders really need.  When interviewing the end-users, organizing workshops or directly participating in business process for which the software product is written, there are many requirements which are very important, they are 'must-to-have' requirements .  In the same process, the clients name some functionalities, which are related to software, but they do not seem do solve any problem, so say 'nice-to-have' features., e.g. have the possibility to change the interface color, or be able to manage some processes which the software could do without their interference.   There should be some pattern to manage this kind of requirements. How to distinguish between these 2 kind of featuures? How to estimate does an additional feature add value to the software or is just augments the scope of the project?  Besides, how to persuade the clients that 'nice-to-have' features are somehow useful, but not really necessary.  "
b'228622'	b'How to organize software document for the same application supporing both iOS and Android'	b'I have to write software project documentation for an application which will support both iOS and Android. Each platform has its specific features and the mobile app design and requirements are almost the same.  At first, I thought to include all the requirements in one document by separating the platforms side-by-side.  However, why should android devs see the iOS dev part and vice-versa?  Should I write the document separately for each platform or include it in one document? Which one is good for QAs and for the overall professionalism of the software requirement specification ? '
b'220095'	b'Is securing the credit card data is considered a requirement from the customer'	b"I'm taking an Introduction to Agile Software Development course, The instructor was discussing an example about online store and asked us to write the User Stories and the Conditions of satisfactions and one story was As a user I can commit for marketing card that was selected previously in order to buy my goods, the conditions of satisfactions in this case contained some conditions in addition to The system must secure the Credit Card data across the internet connection using https   I disagreed with that and said this is a thing that must be done, not just in case the user asked me to protect it, and it is a fatal threat like or more important than SQl Injections and this is a non-functional requirement at the technical level and if the user mention it or didn't this must be taken in our development, some project managers in the course showed their disagreement and said this is a time wast on features that the user didn't ask for!, the instructor didn't give my comment any attention and didn't reply to me.   I really think I'm true and not convinced, but all of those trained people disagreed with me[I'm new in the software engineering field but used always to work as a developer], so I'm asking you about this. "
b'219467'	b'Who should provide the Requirement doc / SRS?'	b"I am creating a Mobile application (CRM) for another software company. They told me they need these these stuff from here and there, within 15-30 minutes. But they never provided a detailed client requirement document in writing. I have been asking this for number of times, but still no. As soon as I started working I realized what they told by mouth is not even 10% of the work. They first asked me to come up with my own design which is similar to another app they mentioned. I did, 100% similar design to the app they mentioned. Then they said they don't like it so they gave me their design. I completed there design and submitted it. Now they again say they don't like their own design and asking me to do another design! Apart from that, they are asking for some 'Activity Sliding Animations', 'Windows Like UI' etc now. In order to do this, I need to remove the entire work I did and start from the scrach, because it can be done by Fragments and mine contains Activities. I even have no idea how the backend will be. Even after one month, we are still designing and changing the designing (Because you have to send at least 3-4 mails, contact at least 2 of their team via phone to get an answer. Very slow communication).  And will they pay for the trashed designs? I don't think so. So what about the other customers of mine which I said 'no' due to the lack of time I am going to have because of this project? I feel almost crazy.  They always say come up with your own idea, but that is very risky in this situation. If my idea is not accepted, waste of time and money.  I am so tired of this, I wasted lot of time designing two 100% different designing, and about to proceed to 3. Since I don't know how the software will be, I haven't done a cost estimation as well. So my question is, client is not supposed to give you any documented requirement? May be an SRS? (What I meant by SRS is, complete detailed document about functionality they need. Including these 'animation' stuff, because I have no super power to guess) The requirement doc they provided is useless, it only says 'update', 'delete', 'edit'. All my other clients did provide complete data, some even provided drafts of the design process, except this one. They should at lease ptovide me their requirements in details, in writing,  I need some advice here. "
b'147937'	b'How much detail about a user story can a developer expect?'	b"The biggest drawback of agile development I have experienced is that people not involved in development focus on the mantra that a user story (3-10 ideal person days) should not contain more than 1-3 sentences like:     As a customer, I can use free-text search so that I can find the products I'm looking for.   Giving this sentence, project managers expect me as a developer to commit to an estimate and develop the story. They assume that agile development means that sentences like this are all they have to provide to developers.  I won't blame them because the well-known literature about agile development creates the impression that this would actually work. I've read something like 2 pages in natural language per story in 'Planning XP', but that's it. Because 'working software' is favored over 'comprehensive documentation', this topic seems to be generally avoided.  The reality is, of course, that if the developer is given the chance to do so, an interview with the customer brings up a long list of requirements that the customer has about the story:        We need boolean operators like AND and OR.   We need fuzzy search an all terms.   We need to search by single words as well as by phrase.   We don't want to find products that meet criteria X, Y, and Z.   We want to sort the result. Oh, and by the way, the user can select the sort criteria in a combo box with options a, b, and c.      So you see that I'm not talking about technical details or software design or even implementation details. It's pure requirements. The longer we talk the more the customer realizes that there's actually quite a lot to say about what they want.  But often enough I find myself in the situation that such information is not provided or in very shoddy fashion. Neither is it possible that I do the interview, nor does the person that would be in the position to do the interview provide me with a result of it.  Sometimes, managers even come up with technical details like 'we want Lucene search' but they don't want to think about if they want find only product names or also product descriptions. Sometimes I think they are just lazy ;)  For me, this is the top issue in projects I work in (e-business web application, 500-2000 person days per project). I've addressed this problem often enough, and managers are aware that most developers have a problem with the situation. But they believe that developers are just too much 'perfectionists'. They seem annoyed that developers 'always want to have everything specified'.  Due to the lack of generally acknowledged numbers it's hard to argue. Everybody knows how long an iteration should be. But nobody can tell how much requirements are needed to estimate and develop a story.  Do you have some reference? "
b'218437'	b'What is the difference between requirements and acceptance criteria?'	b'I am trying to understand the difference a little better as it seem like they are the same thing.  I have work in projects with no use of the requirements and everything is an acceptance criteria, and on projects that have both. '
b'216810'	b'Tender vs. Requirements vs. Solution Design'	b"Conventionally, which of the above documents is deemed to hold the most weight when it comes to system acceptance?  I recently had a conversation along these lines:  It was argued that the initial requirements / tender documentation should be used to determine system acceptance. It was said that the solution design only serves to describe the way in which the system will solve the problem, not the problem it will solve. Furthermore, it was argued that if requirements are missed during solution design, the requirements should be referenced during system acceptance and that if any requirements were missed then the original tender should be referenced.  Conversely, I suggested that - while requirements may be based on the original tender - they supersede it once agreed with the stakeholders. Furthermore, during solution design, analysis is performed to address and refine these initial requirements, translating them into a system capable of meeting the actual requirements. Once signed off by the relevant users, this solution design should absolutely represent the requirements (by virtue of the fact that it's designed upon them) but actually supersedes them as the basis for system acceptance.  Is one of the above arguments more valid than the other?  EDIT: Apologies for the ambiguous terms. In this situation, tender is the document the customer took to market when shopping for a provider - it includes details of all the high-level features they're looking for. Solution design is not a technical document, it's the functional specification. "
b'216270'	b'How to know how much detailed requirements should be?'	b"This doubt has to do with the requirements gathering phase of each iteration in one project based on agile methodologies. It arose because of the following situation: suppose I meet with my customer to gather the requirements and he says something like: 'I need to be able to add, edit, remove and see details of my employees'.   That's fine, but how should we register this requirement? Should we simply write something like 'the system must allow the user to manage employees', or should we be more specific writing for points   The system must allow the user to add employees; The system must allow the user to see details of employees; The system must allow the user to edit employees; The system must allow the user to delete employees;   Of course, this is just an example of a situation I was in doubt. The main point here is: how to know how much detailed I must be, and how to know what I should register? Are there strategies for dealing with these things?  Thanks very much in advance! "
b'215367'	b'Functional/nonfunctional requirements VS design ideas'	b"Problem domain   Functional requirements defines what a system does. Non-Functional requirements defines quality attributes of what the system does as a whole.(performance, security, reliability, volume, useability, etc.)  Constraints limits the design space, they restrict designers to certain types of solutions.     Solution domain   Design ideas , defines how the system does it.   For example a stakeholder need might be we want to increase our sales, therefore we must improve the usability of our webshop so more customers will purchase, a requirement can be written for this. (problem domain) Design takes this further into the solution domain by saying 'therefore we want to offer credit card payments in addition to the current prepayment option'. My problem is that the transition phase from requirement to design seems really vague, therefore when writing a software requirement specification I am often confused whether or not I incorporated design ideas in my requirements, that would make my requirement wrong. Another problem is that I often write functional requirements as what a system does, and then I also specify in what timeframe it must be done. But is this correct? Is it then a still a functional requirement or a non functional one? Is it better to seperate it into two distinct requirements?  Here are a few requirements I wrote:     FR1 Registration of Organizer      FR1 describes the registration of an Organizer on CrowdFundum         FR1.1 The system shall display a registration form on the website.   FR1.2 The system shall require a Name, Username, Document number passport/ID card, Address, Zip code, City, Email address, Telephone number, Bank account, Captcha code on the registration form when a user registers.   FR1.4 The system shall display an error message containing: \xe2\x80\x9cRegistration could not be completed\xe2\x80\x9d to the subscriber within 1 seconds after  the system check of the registration form was unsuccessful.   FR1.5 The system shall send a verification email containing a verification link to the subscriber within 30 seconds after the system check of the registration form was successful.   FR1.6 The system shall add the newly registered Organizer to the user base within 5 seconds after the verification link was accessed.   FR2 Organizer submits a Project         FR2 describes the submission of a Project by an Organizer on CrowdFundum    - FR2 The system shall display a submit Project form to the Organizer accounts on the website.&lt;   - FR2.3 The system shall check for completeness the Name of the Project, 1-3 Photo\xe2\x80\x99s, Keywords of the Project, Punch line, Minimum and maximum amount of people, Funding threshold, One or more reward tiers, Schedule of when what will be organized, Budget plan, 300-800 Words of additional information about the Project, Contact details within 1 secondin after an Organizer submits the submit Project form.   - FR2.8 The system shall add to the homepage in the new Projects category the Project link within 30 seconds after the system made a Project webpage   - FR2.9 The system shall include in the Project link for the homepage : Name of the Project, 1 Photo, Punch line within 30 seconds after the system made a Project webpage.   Questions: FR 1.1 : Have I incorporated a design idea here, would ' the system shall have a registration form' be a better functional requirement?  F1.2 ,2.3 : Is this not singular? Would the conditions be better written for each its own separate requirement FR 1.4: Is this a design idea? Is this a correct functional requirement or have I incorporated non functional(performance) in it? Would it be better if I written it like this: FR1 The system shall display an error message when check is unsuccessful. NFR: The system will respond to unsuccesful registration form checks within 1 seconds. Same question with FR 2.8 and 2.9. FR2.3: The system shall check for 'completeness', is completeness here used ambigiously? Should I rephrase it? FR1.2: I added that the system shall require a 'Captcha code' is this a functional requirement or does it belong to the 'security aspect' of a non functional requirement.  I am eagerly waiting for your response. Thanks! "
b'214284'	b'What is exactly bug in the requirements?'	b"I've just looked for a formal definition and haven't found one. The term - 'bug in the requirements' was always confusing for me, what does mean exactly? "
b'214228'	b'Story Point Estimation - Component Based'	b'I have read that story point estimation is not intended to actually tie with number of hours , but is used to identify the relative capacity. I have a java application which has a adapter layer , a service implementation layer , a DAO layer and an external connector service layer. If I am given a high level requirement , is it a good practice to a classification of story points for each layer - eg:  Adapter : small : 1 SP , medium 3 SP , Large : 5 SP , Extra Large : 8 SP Impl : small : 3 SP , medium 5 SP , Large : 8 SP , Extra Large : 11 SP DAO : small : 1 SP , medium 3 SP , Large : 5 SP , Extra Large : 8 SP  Is it a good way of estimation? Or should we always estimate by looking as application as whole for each change? For eg, If I have got 2 user stories , should I estimate size of user story as a whole , say 1 US takes up 5 SP and other takes 13 SP? Does component-wise breakdown make sense for story point estimation?  '
b'209234'	b'What are the differences between functional, operational and technical requirements?'	b'I have done tasks based on Java, but my seniors assigned me to collect requirements for creating a globalized bug tracking tool.  I have read many types of requirements from Wikipedia and the mindtools website, but it was very confusing.  What are the exact differences between functional requirements, operational requirements and technical requirements? '
b'208575'	b'What software is used to write functional and non-functional requirements?'	b'Is there any software which can be used to write functional and non-functional requirements?  When writing those, it is essential to:   Store the document in text format to be able to make diffs and minimize the impact on the version control, Apply extensive formatting when creating diagrams would be an overkill, Use diagrams, preferably stored in text format as well, Cross-link the requirements or the appendixes.   Currently, I can only think about three editors which may be used, but which are not truly suitable:   A Markdown editor.  Benefits: text only; easy to add formatting.  Disadvantage: not powerful enough: one can add images, but not diagrams; formatting is rather limited; no cross-linking (unless adding much HTML markup). An HTML editor.  Benefits: text only; ability to add diagrams with HTML 5. Advanced formatting is possible.  Disadvantages: markup difficult to change by hand, or if WYSIWYG editor is used, markup is often too verbose and low quality; cross-linking limited to manual only. A document editor such as OpenOffice or Microsoft Word.  Benefits: ability to apply some advanced formatting; excellent automated cross-linking.  Disadvantages: binary format, which means no diff and wasted space in version control.   What are my other choices?  What is actually used in the industry? '
b'206101'	b'How to deal with requirements and use cases in this kind of situation?'	b"Recently I've started to work with object oriented analysis and design and it seemed very interesting to me as a way to get work done better. But I'm still in doubt with one kind of situation. If this is not the correct site to ask about it, sorry for that.  Well, if I have to design a system that allows one user to register customers, sell products and so on, we have someone that will operate the system, in the sense that actor is kind of obvious for some of the use cases - the actor we will consider on the use case 'Register New Customer' is simply the responsible for that action in the company of the customer that is purchasing the software.  Now, there are sometimes that this doesn't happen. I'll give an example: I've developed once a system to manage templates for websites in PHP. In that time, I didn't develop it within an object oriented context, but I was thinking on bring this system into object orientation to practice object oriented analysis and design. The point is that the system is very simple: 'it takes some configurations written in a xml file, takes a URL and maps it to a file'.  The point is that there's no interaction between the users of the websites and the system. The only thing that happens is that the user requests a URL and the system selects one html file that matches this URL in some way, and embed this html into a template specified in the xml. In cases like that, the only functional requirements I can think of are:   The system must allow the user to specify the folders of templates into an xml file; The system must get the information of directories from the xml file; The system must load one specific file corresponding to the requested url inside one template file; The system must allow the replacement of placeholders into the template by values specified on code;   The problem is: for instance, although I thought of them as functional requirements, all of them has to do directly with how the code must be made. Only the third one really fits what I understood of functional requirement. Also the use cases are a little complicated, every action is took by the system itself. The only use case could be 'Request Page' with actor being 'Site Visitor' and this would imply that the scenario would be just 'The user inputs the url into the browser window and the system loads the page.'  So, in cases like that, when we are dealing with code will simply be reused into some other code (this is an example, it's just a bunch of code that a developer can use to load pages independent of a template), how should we deal with requirement analysis, use cases and so on?  As I've said, the PHP system I wrote is just an example, I'm really asking in general. Could someone give some hints or reference (some article, tutorial, something like that), that shows how to deal with this?  Thanks very much in advance! "
b'205786'	b'What should I do if I don&#39;t have any formal spec?'	b'I recently was assigned to a task, but it says only a couple of words, like, do it as it made there, with no actual spec attached. What is the best thing to do in that circumstances? '
b'204827'	b'Tools aiding in documenting API requierements for a REST Service'	b'We need to define our requirements for a REST API. What are tools which aid in creating a document which will fully describe the webservice so it can be created by another entity? '
b'67693'	b'Should I represent the Database in my use cases?'	b"I am creating use cases for my web application and I was wondering if a representation of the DB should be listed as an actor. For example a user can check his profile and edit it (assuming that he is logged in). The two use cases would be: - User can view his profile - User can edit his profile  Would the use cases then be for example: Actor: User, DB Use case: View profile  Or can I leave out the DB as an actor? Unfortunately I haven't found any consistent way of drawing the use cases. "
b'141420'	b'Better word for Optional Requirements?'	b"What's a better word for an optional requirement in software engineering? The phrase is contradictory. I've used 'Non-Core Requirements' in previous projects. "
b'203758'	b'Verification of requirements in a closed system'	b"I'm on my first real software project following the whole SDLC and am a bit confused. We have a requirement that states something like 'The battery will be monitored each second' which needs to be verified. This is something that can't really be checked in the system since it happens 'inside', i.e. there's no output that would show that the battery was checked each second. It is my understanding that at this phase the verification is done on a closed system, so you can't just use a debugger to verify something like this.  Is this assumption wrong? Or can the requirement be considered to be ambiguously defined. "
b'203483'	b'What is a Non-Functional Requirement?'	b"In my breakdown of work I have to define work against 'Functional' and 'Non-Functional' design elements / work in my applications. I read the description from Wikipedia here: https://en.wikipedia.org/wiki/Non-functional_requirement but as typical the description did not speak exactly to me to clear up my understanding.  Can someone please explain in terms of an example when creating an application from scratch, what would be defined as a 'Non-Functional' requirement? "
b'202757'	b'How do you get users to rank their software enhancement needs?'	b"I've inherited a legacy software system, and have been tasked with performing usability and system upgrades. While there's nothing bad with the system, from discussions with the users, there are 'small' usabilty issues that need to be addressed.  At this stage I'm the lone developer on this system, and apart from testing I don't use the system at all, so its difficult for me to know what issues may exist or are percieved to exist. I'm going to have some time to speak with them all and discuss what they percieve to be good/bad or indifferent about the system.  Since its essentially just me for the time being my time is limit. So I was considering asking them to imagine that I'd only be able to do one change, have them all write privately what they'd want that one change to be, and then helping them rank those, but I'm hoping for other tips as well.  What techniques exist for getting users to explain their wants, needs, and requirements, while also having them rank them by importance or desirability? "
b'201798'	b'How do I convert a list of Requirements into Constraints?'	b"I am trying to prepare my first software design document. I am self-taught and have no formal training in CS. Having done a wee bit of reading up on it beforehand, I have created a list of Requirements, Qualities and Non-Qualities for the system, which provide an overview from a managerial viewpoint on what the project is tasked with providing. The intent was for these to be convertible into design Constraints, which in turn would guide justifiable design decisions. So far they do not get into many specifics of what resources are to be provided, but are general in that they should apply to all resources present in the system.  I am having difficulty, however, in proceeding to the next step. What exactly is a Design Constraint supposed to look like? How specific or general should it be? How do I convert domain Requirements into Constraints? Have I already gone nuts and over-specified things? :-)    Background I am the only programmer at a small service company. We have a current HTML with PHP PIs application which grew organically and has no test infrastructure. Editing one bit has repercussions and unintended consequences in far flung parts of the app. I want to replace it with a more professionally designed (in fact, any kind of designed) one, object-based with a test suite. Management doesn't know about programming and I need to know which of the current features are cruft, which workflows are bogged down, etc. This is intended to be my guidance both during a perpetually postponed design meeting and during implementation.    So far, I have the following:  Terminology   'Owner' refers to a company or division running their own deployment of the Software, with data independent of any other deployments. 'Developer' means an individual who is either a programmer with write access to the source code, or a database admin working for an Owner. 'User' means an individual who has authenticated access to a deployment. 'Staff' means a User who works for an Owner. 'Client' refers to a User who is a customer of an Owner.   REQUIREMENTS What features must the service exhibit?   Platforms: Access to the service must be available via a variety of recent-to-modern, general business computing devices. (i.e. desktop, laptop, tablet and smartphones as of 2013). Mobility: Reasonable efforts at providing access to the service for all Users must be made, regardless of their physical location. Secure: All data must require authentication and authorization to access, and non-safe requests must come with sufficient confirmation that they were initiated by user intent. Access Controls: Resources and sets of resources must have variable authorization permissions. Admin Powers: Read and write authorization to individual resources and sets of resources must be seperate. Unbreakable: The system must not be able to be put into a 'broken' state by Users. No Clobber: A User should not be allowed to overwrite another user's changes unknowingly. Off-line: A User's scheduled events for the current day must be readable off-line. Rapid Bootstrap: New Staff must be able to get up to speed on the internal side of the system quickly. Owner Agnostic: Nothing specific to one Owner should be present in a new, clean deployment for another Owner. Brandable: An Owner must be able to configure the system to exhibit their branding and corporate specifics. Safe Data: A frequent and reliable back-up of all data must be easily scheduled.   QUALITIES What other features would we like the end product to exhibit?   Fast developer turn-around for bug fixes. Fast prototyping for new features. Error-free implementation of new features. Regression-free changes. Attractive Client UI. Efficient Staff UI. Widest device and OS support reasonably achievable. All accountability/blame data (who did what, when?) should be involatile. All other data should be editable by a user with sufficient authorization, without needing a Developer. Data back-ups should be creatable on demand by a sufficiently authorized user. Data back-ups should be restorable on demand by a sufficiently authorized user.   NON-QUALITIES What features are not important and will allow flexibility of design?   Programming language choice UI monolingualism We do not need a generic resource import or export system. [this list is incomplete]  "
b'201943'	b'Are there elements common to nearly every SRS?'	b"An SRS is a staple of any serious contract work, and it can be incredibly dull for those who've never had the misfortune of needing to read one through in one go.  I'm writing a series of document classes with LaTeX (markup language for profession-quality documents; see these questions and this answer on TeX.SE) and, in so doing, I need to define the core tenets and common logical structures evident through any reasonable SRS.    I have unfortunately never had the opportunity to participate in the creation of an SRS from scratch save a simplified, somewhat contrived example during college, so I don't think I know the breadth of what goes into a Software Requirements Specification (SRS).  I do know it consists of at least the changelog and the requirements themselves, but beyond that... ?  What are the indispensable parts of the document that every SRS should have?     I'm still pretty new here, but I'm open to making this CW if Programmers.SE is all about this kind of stuff. "
b'46272'	b'How can I estimate how long a project will take?'	b"I'm working as a web developer and I want to be able to determine if I'm efficient.  Does this include the how long it take to accomplish tasks such as:   Server side code for the site logic with one language or multiple php,asp,asp.net. Client side code like javascript with jquery for ajax, menus and other interactivity Page layout, html, css (color, fonts (but I have no artistic sense!)) The needs of the site and how it will work (planning)   How can i judge how long it will take to complete a website?  The site has CMS for adding and editing news, products, articles on the experience of the company. Also, they can edit team work, add Recreational Activities and a logo gallery with compressed psd download, and send messages to cpanel and to email.  You are starting from scratch except JQuery and PHPmailer.  How can I estimate how long the job will take, and how can I calculate the required time to finish any new projects?  I'm so sorry for many scattered questions, but I'm in my first experiment and I want to take benefits from the great experience of those who have it. "
b'199428'	b'The Proper UML Model of a System for Non-Technical Boss'	b"I've taken on some side work for this non-profit and last week was my first week on the job. They have two SQL Server Databases each with many tables in them that represent over 20 different applications such as    Course signup - Trainers can signup to teach different available classes Course Approval form - trainers complete this form to get new courses approved to be added to the list of available classes. Schedule - schedule of important dates for a term (holidays, start date for classes, etc.) Trainer - list of all trainers and other information about a trainer (contact info, education, etc.) Training Calendar - List that students can look at to see what's available for the current term Training plan - a report that is printed for student with all of the classes they've signed up for Certificate - Print a certificate for a student once the training course has been completed   There are about 15 other applications but it's all related to trainers, training, courses, students, etc.  This data is all over the place as there are no relationships between tables and very tedious processes have to be done to complete simple task. For example, for every new term you have to copy the data in the 'old' table, create a new table, paste the old data into the new table and append the new data for the current term to the new table. So there's a table for every term (3 terms per year) for the past 10 years and that's only the beginning.   There's a lot of copying and pasting from Excel to SQL Server to get the data into the database and their front-end to manipulate the data isMS Access which I'd like to replace with ASP.NET (they have IIS 7).  To properly architect this and have good documentation, I've installed Visio 2013 and I'm learning about UML. So that boss can know exactly how this system will be re-architected, and how all the pieces will fit together what UML diagram should I create for him? Would that be a component diagram? I need to give him the 10,000 foot view so something like use-case, sequence, or database diagrams is way to low-level for him. "
b'196535'	b'Where to put details about the acceptance criteria of a user story?'	b"In this blog post about acceptance criteria the author explains that good acceptance criteria should:   State an intent not a solution (e.g. \xe2\x80\x9cThe user can choose an account\xe2\x80\x9d rather than \xe2\x80\x9cThe user can select the account from a drop-down\xe2\x80\x9d) Are independent of implementation (ideally the phrasing would be the same regardless whether this feature/story would be implemented on e.g. web, mobile or a voice activated system) Are relatively high level (not every detail needs to be in writing)   And further details such as:   The column heading is \xe2\x80\x9cBalance\xe2\x80\x9d The rolling balance format is 99,999,999,999.9 D/CR We should use a dropdown rather than checkboxes   should be moved to either a Team internal documentation or Automated acceptance tests  However, I often hear people frowning about using Cucumber or similar frameworks for doing GUI tests. Moreover, using an internal documentation could generate lots of problems due to failure to update the documentation regularly.  I'm still struggling to find an effective way to capture such details during the conversation with the customer. "
b'179447'	b'System requirement specification vs functional one - separate docs?'	b'A lot of sources (e.g. Wikipedia) mentiones System requirement specification and Functional specification as two separate entities. However, Wiegers in his book writes:     The software requirements specification is sometimes called  a   functional specification, a product specification...   This is very confusing for me as I thought FS describes just functions while SRS whole system. From this point of view, FS would contain both non functional and functional requirements and everything else. '
b'191013'	b'How to label software requirements?'	b'What is a good strategy to label software requirements in an SRS?  Typically outline numbering is employed on headers - but these will renumber if a new heading is inserted in the document. To me it seems like a good idea to aim for a more stable designation for each software requirement. This should make it easier to reference a particular requirement even in the face of an updated SRS.  What are your experiences on this? '
b'190683'	b'What can be used in lieu of use cases to gather requirements?'	b"I'm a programmer currently working in rounds of meetings along with BAs and PM to gather/describe modules and functionality of our case management system; after a few meetings I saw that using 'use cases' would be a very very good fit to document many of the things and functions discuessed and/or proposed for the new system. When I suggested we needed to create 'use cases' so that we don't forget what we said/concluded and also to have programers know what they should code, the leading BA mentioned don't like 'use cases'.  What can be used to gather/document requirements when people supposed to write user requirements say they don't like 'use cases', or when you realize that they don't want to write 'use cases' to describe what the system should do?  I'm trying to find out if there's a close or effective substitution to using 'use cases' to document system functionality/scenarios. "
b'185665'	b'Software Requirement Specification documentation by professionals'	b'I just wanted to know what is the significance of SRS(Software Requirement Specification) in programming? and what are the techniques used in preparation of an SRS .. also who writes the SRS.. is it the programmers? '
b'187177'	b'requirements for software quality for internally developed / shared software?'	b'In environments where software is built internally by one team and then that software is used by other internal teams, how does one decide what the required quality should be for the produced artefacts?  For example:   documentation completeness and accuracy extensibility/re-usability of artefact (without hacking at source code) defects etc   I guess one aspect to consider is the length of time into a project before quality is considered.  It should be more cost effective to ensure quality is built into a product from the start rather than leaving it until later in the project life-cycle. '
b'186634'	b'User Stories - How should it be defined for complex changes involving multiple applications'	b'This is one of the definitions that I asw for user stories -  When the time has come for creating user stories, one of the developers (or the product owner in Scrum) gets together with a customer representative. The customer is responsible for formulating the user stories. The developer may use a series of questions to get the customer going, such as asking if some particular functionality is desired, but must be careful not to dominate the idea creation process.  In a large organization there could be multiple lines of business. For a particular line of business , there could be multiple applications (more than 10) that may be involved in fulfilling a business requirement. The requirement to each of these application teams could be provided by a business analyst and the high level solution could be formulated by a solution designer.   In scenarios such as these , would a single user story be defined for a specific change request that impacts multiple applications or would different user stories be created for each application? If it is a single user story then would a separate SRS be defined for each impacted application would it need to be associated with the user story defined? '
b'186808'	b'System Requirements - Use of Conjunctions'	b"I have come across many blogs and books where it is stated that it is bad for a system requirement to contain conjunctions like 'and'. However in reality I am often coming across scenario where a requirement is satisfied when a certain set of conditions are met. For instance, Shopkeeper should sell alcohol only if the buyer is older than 18 years, he has the necessary proof and he does not have any alcohol related problems. The requirement would not be complete if I break it down into multiple system requirements and I cannot complete the requirement without use of 'and'. "
b'141608'	b'functional requirements - use wording based on verbs?'	b"Question  Should the functional requirements in a requirements doc use wording based on verbs?  Context  School assignment, working in a team, working through the SDLC. The requirements doc has been done and we are now into design.  Problem  The requirements doc has an enumerated list of what I'd call features of the app - the  functional requirements. In that list are things that I'd think of as 'how's' rather  than 'what's' and now, trying to work on design, I feel like a part of design has been  prematurely dictated.  I've not done this before! To me, I should be dealing strictly with things that  describe 'what.'  Example of current  Pretend that the job is to make an omelet. Listing: crack the egg, break into bowl, scramble, etc.; crosses over the line into the territory of how. Along that track, so does wording like: create, generate, list, calculate, determine, validate, etc. - verbs, basically. Right now, I have a list of requirements that are partially rooted in verbs.  My idea of a requirements doc for an omelet would be more like: has two eggs, x ounces of ham, x ounces of bacon, x ounces of montery-jack cheese, x ounces of cilantro, etc.&mdash;nothing but what (nouns).  I might have, and could have, spoken up before finalizing the requirements doc if I'd had any experience. "
b'179199'	b'IEEE SRS documents: lightweight version when working with outside contractors?'	b"Typically we follow an Agile development process that tends not to put an emphasis on writing requirements and technical documents that nobody will read.  We tend to focus our limited manpower to development and testing activities with collaborative design and whiteboarding as a key focus.  There is a mostly standalone web component that will take quite a few weeks to develop, but this work can be mostly parallel with other project work going on.  To try and catch up time I was given a budget for hiring a developer on oDesk to complete this work.  While my team isn't accustomed to working off of a firm SRS document, I realize that with outsourced development that it is a good idea to be as firm and specific as possible so I realize that I need to provide a detailed Requirements and Technical Specification document for this work to be done correctly.  When I do write a Requirements document I typically utilize the standard IEEE SRS document template but I think this is too verbose and probably overkill for what I need to communicate to a developer.  Is there another requirements document that is more lightweight and also accepted by a major standards organization like the IEEE?  Further, as what will be developed as a software module that will interact with other software modules, my requirements really need to delve into technical specifications for things to work correctly.  In this scenario does it make sense to merge technical and requirements specifications into a single document, and if not, what is a viable alternative? "
b'178625'	b'Is a functional spec a part of the System requirement spec?'	b'I wonder, sources like wikipedia or templates I found shows that Functional spec is a part of System requirement documents. I always thought that SRD is just overall decsription of the system, with all functional and non functional requirements. Yet I thought that Functional spec is more detailed and it is a separate document, while SRD is high level customer-created description (how is this one called then?) Could anyone help to make this clear for me?  '
b'178136'	b'Should the analyst define the programmers and their seniority needed by the project?'	b"It might be obvious, but I am not sure.  Should the analyst who interview the client, gather and analyse requirements then give an estimate, also specifies how many and with how much experience developers should be required to develop it?  Maybe I'am not so sure on how I go about this allocation thing, maybe this is just not my work. "
b'171184'	b'What methods of requirements elicitation are suitable when I do not have direct access to the user base?'	b'I am working on an application to create invoices. There are some features that are required based on the type of the application and are common to all invoice applications. However, we still need to determine what unique needs the user base might have. We do not have direct access to the users to obtain requirements or user stories. What techniques are most suitable for eliciting high-quality requirements from users when direct or frequent access is not possible? '
b'168260'	b'Is it the job of a developer to suggest IT requirements?'	b"I am the only developer working on a web application which is nearing to its end. Now we are looking into making it Live in maybe a couple of months time.   This is a web application for a non IT company. Though they have their own internal IT team, they have asked me on what will be the hardware requirements for the live servers eg. RAM, 32 bit or 64 bit.  Shouldn't the internal IT team be doing this or since I am the only person working on the project is it my resposiblity to let them know of the any specific hardware requirements which may impact the performance of the project?   The reason I am asking this question is that, I have not done this before. All the times I used to be given a server and asked to deploy apps on it. I never used to worry about the server configuration, etc.  "
b'165245'	b'Is there any professional way to illustrate difference between 2 diagrams?'	b"I made a documented which is to describe the difference between the same logical structure from different version ( e.g Structure A from version 8 and Structure A from version 9 ).  Luckily I've got the logical structure diagram from the 2 functional specification. I've managed to copy the image of each logical structure and paste them in MS Word and compare the 2 version side by side.  I don't know if there is a standard way to illustrate the difference. I simply draw a cross over the removed logical member from the previous version and draw a rectangle around the new logical member of the next version. I know my way is kinda childish. I am wondering how to present them professionally.    In addition, You won't believe this, but MS Word doesn't have a shape of CROSS, so I am actually using a multiplication sign that look like a giant monster:    This is why I hate myself. Unlike 2 separated lines, this shape is easy to use, draw and resize. I am wondering if MS Word would care about a normal cross. "
b'164880'	b'Are costs part of the requirements?'	b'I am new to requirements analysis and have a simple questions: Would you include the budget in the requirements, if e. g. the departments budget for running costs is 10k a year.  '
b'163715'	b'Ambiguous program requirements'	b'it seems that most of the programming exercises that I am currently doing, are a little bit ambiguous when it comes to specifying what should I do.  When programmers work with clients, are the clients ambiguous as well about what they want and I should learn to guess? '
b'160820'	b'What kind of metrics, if any, can be collected from requirements development?'	b'We elicit requirements from our product stakeholders by creating and refining user stories in monthly sprint planning meetings.  This includes defining use cases, acceptance criteria, and identifying constraints, and the final result is a sprint backlog of user stories.  The high-level customer requirements are refined into lower-level product requirements through design reviews among the development team throughout the sprint.  The design reviews result in UML diagrams, software interfaces, and, in general, a human language description of various software requirements.  We are increasing our metric-awareness as an organization so that we can better identify potential areas of process improvement (and so that we can eventually be appraised at CMMI level 3).  What kind of useful metrics are there to collect in the elicitation and refinement of customer requirements? '
b'160171'	b'User stories as a contract definition?'	b"I am often asked to write a requirements document for a new piece of work. I write requirements using user stories. The list of requirements is then used as a contract with the client denoting the functionality that will be delivered. The temptation them becomes to add more and more detail and more and more stories in an attempt to define a water-tight specification that rules out any expensive mistakes.  The problem is user stories just don't seem well suited to this task. Can anyone offer any clarification on the role of user stories? For example, is the same user story appropriate for  client, programmer and the author of a functional spec?    Regressing a little, perhaps I'm also asking what is the best way to define a contract of what will and will not be delivered in a software project?   "
b'74110'	b'Tool to manage requirements throughout a software development lifecycle'	b'I am looking for a tool to manage requirements or features for a software development project. It will be used by a small geographically diverse team of 5-10 people to raise, discuss and track requirements. Consequently it will need:   Support for multiple users Web-based Support a hierarchy between requirements, e.g. parent / child relationship Provide a means for discussing individual requirements Support file uploads Cost effective. Ideally free or    Some of the project management tools available are overkill or focus on tasks or resource scheduling rather than features / requirements.   Does anyone have a solution?  '
b'157894'	b'Capturing correct level of detail in a user story'	b"I have written various user stories that describe functionality at a pretty high-level. For example:  As an analyst, I want to view the current share price, so that I have quick access to an up-to-date valuation of stock across the Euronext, London and New York stock exchanges.   This requirement is based on existing functionality that is being re-developed in a new version of some software. I can see from the existing implementation that the actual information displayed includes a lot of extra data such as different classes or shares, different timescales of graphs etc.  I think it is impractical to capture all the functionality in the current implementation. So I have two questions:   How do I decide an appropriate level of detail for the requirement that is basically 'do what the current piece of functionality does'. Is there some structured approach of accompanying the user story with more information? At the moment, I feel this would be the job of wireframes.  "
b'145628'	b'How to model two similar tasks with the Use-case diagram'	b"I am trying to draw a use-case diagram for a software project.  Two requirements for the software I am trying to model in use-case diagram are:   A customer (i.e. Client) should be able to cancel its previous request. In this case, the client must select the relevant request from their list of request. A travel agent should be able to cancel a request. in this case, the agent must the client from the list of clients and the request from the list of request issued by that client.   How should I model this two requirements in a UML user-case diagram? I've ended up to something like this:   "
b'149134'	b'How to specify a functional requirement?'	b'I have this requirement:  The application must allow the Administrator to edit, create and delete Users.   Now, I have heard that each action must go in a functional requirement, and my question is: What of the following statements would be the more appropriate(if any):  1:  The application must allow the Administrator to edit, create and delete Users.   2:  The application must allow the Administrator to edit Users. The application must allow the Administrator to create Users. The application must allow the Administrator to delete Users.  '
b'141899'	b'When is a requirement considered complete?'	b'Which elements must a requirement contain that it can be considered complete? Or if this works better - which questions should I ask about a requirement to find out if it is complete. I am not talking about the implementation of the requirement but the requirement itself.  I am asking this from the perspective of an analyst who wants to make sure that his requirements are complete before passing them on to the design team. '
b'143629'	b'New website - best practice for requirements specs?'	b"   Possible Duplicate:   Extracting user requirements from a person who does not know how to express himself       As a hobby freelancer I'm new to this. I've never had a non-technical client before explain to me what his future website is supposed to do.  A person wants me to make a website for him and he basically explained to me what's it about. However, he's not a technical person and he just doesn't understand what I need to know and how to properly describe/explain it to me.  When I ask him how a user is supposed to submit an entry to the website he told me 'He fills out a form.', which is not really helping me. This was just an example, it goes on for other sections of the website as well which are a lot harder to explain.  The website will be aimed at a specific professional user demographic and I have no clue about their profession and how their industry works.  I tried to find some good Product Requirements Document templates on Google but none of them really seemed like they could help him understand how to write it so I can understand what he wants/needs.  Can somebody please give me a hint on how to deal with such non-technical clients? "
b'125077'	b'Agile,Waterfall and requirement changes'	b"Has anyone had this issue of a project defined as 'Agile' being overrun by requirement changes ? I work on a development project which is run in 4 weeks Sprint but there are always changes in between these Sprints . Is it still defined as Agile then ? I feel it's sort of a sub Agile process - The requirements of an Agile process should be defined at the beginning of a sprint and reviewed towards its end. Am I right in this? Please let me know your experiences in this . "
b'86863'	b'How are minimum system requirements determined?'	b"We've all seen countless examples of software that ships with 'minimum system requirements' like the following:   Windows XP/Vista/7 1GB RAM 200 MB Storage   How are these generally determined?  Obviously sometimes there are specific constraints (if the program takes 200 MB on disk then that is a hard requirement).  Aside from those situations, many times for things like RAM or processor it turns out that more/faster is better with no hard constraint.  How are these determined?  Do developers just make up numbers that seem reasonable?  Does QA go through some rigorous process testing various requirements until they find the lowest settings with acceptable performance?  My instinct says it should be the latter but is often the former in practice. "
b'139645'	b'Is it a good idea to write requirements specifications by stories?'	b"We're using agile methods in my current project at the moment, and we have heaps of stories like these:   As an assistant, I want to pay a customer a refund so that they can get some money when they request it As a customer, I want to pay for a purchase so that I can receive my item.   How we've done it so far is to pick the most important stories every sprint and elaborate it into a number of formal requirements specs (we group some of the stories that are similar together in the same spec). Depending on the story, it could just be a button on a screen or an entire workflow.  The problem now is that because there's so many stories, it's not immediately clear, for any part of the system which stories relate to it.  It works at the time of developers, every sprint the devs just get a spec outlining what they need to do and the changes they need to make. But in terms of maintaining this story list and for testing, its starting to get really hard tracking bugs and in general just maintaining the specs, because one piece of functionality in the screen might have been documented in a number of different places due to it being split by story.  Is writing specs based on stories a good idea? Have we written the stories in the wrong way? "
b'138494'	b'How to measure external quality of software'	b'For my thesis, I am doing research into the characteristics of Behavior Driven Development (BDD). One of the BDD claims is that by specifying the requirements in a ubiquitous language together with the customer, the software will score better on the external quality. Another claim of BDD is that it produces clean code with a high code coverage.   In my experiment, I will perform a software project both in BDD and traditional style, so that in the end I have two end products. The second claim of BDD is easy verifiable, by checking the code against some quality metrics, like Lines of Code, Cyclomatic Complexity and Code Coverage. However, I cannot think of a good measurement for the first claim. Is there anybody out here who has done this already? Or maybe can propose an alternative experiment that can validate this claim? '
b'81034'	b'How do you decide site availability requirements?'	b"I work on a web application to file a specific kind of county taxes. Our company wants our state to mandate that counties must accept electronic filings (as opposed to paper) from any system that meets some sensible requirements for uptime, security, data validation, etc. (Yes, this would help us as a business, but it would also force county governments to be more efficient.)  We're creating a draft of those requirements to be reviewed and tweaked with the state. One of the sections is 'availability.' We want to specify something reasonably high, but not so high that any unexpected problem will get us (or a competitor) penalized.  How do we decide what's reasonable for availability requirements? "
b'136124'	b'Problem and Requirements Definition'	b'I was recently hired to redesign a management system from scratch. This is my first  business-scale project. I have assisted with business applications in the past, but I am the only one dedicated to redesigning and programming the system with the assistance of a company employee. This employee built the previous version of the management system.   We all agree that we want this done, and done right.  I am willing to put in the time upfront to define the problem and requirements so I do not have to reap bad seeds during testing.  At the moment, I am trying to capture the problem and gather the requirements for this management system. What questions should I ask this employee to be able to move forward with some documentation? I realize these requirements can change constantly, but I would like a starting point to work with.  Here are a few questions I have come up with:       What is the purpose of the management system?   What is the problem we are trying to solve?   What will be the features of this system?   Who will be using the system? (Employees? Outside Entities?)   What are the means of security for this system? (Can an outside entity see what an employee can see? etc.)  '
b'135566'	b'How to write Requirements for a specific module'	b"I am familiar with writing Software Requirements Specification, but not quite sure how to write the requirements for a specific module.  Let's say I need to develop a Reservation System and  there will be a module to perform validation. Now, an SRS is already available for the entire system, but prior to designing(API Specification and Class Diagrams) the Validation module, what would be the format of writing Requirements for this module. "
b'66834'	b'What is the best practice for gathering requirements when a customer does not know what he wants?'	b"   Possible Duplicate:   How do you deal with changing requirements?       This question must have been asked a thousand times but there seems to be little progress in this area:   I have asked the customer what he would like the system to do, to little avail! I have asked the customer about the system that the software is supposed to replace, but the system is either too complex or he does not know about the system or there is no system to replace. I have been through telling the customer what he wants, only to find the requirements change at a later date, etc.  I have tried using a common language, only to realise later that the customer does not know the difference between a textbox and a label.   The list goes on and too much is taken for granted in methodologies such as DDD. I hint at this here: Which layers should reflect the domain language (if a domain language can strictly exist)?  Let's get this nailed into some kind of algorithm!  EDIT  This is the classical bad customer and is not a one that I would want.  A prevailing attitude about whether a developer should visit a customer would be considered costly. A developer is supposed write software; a day out of the office, away from development work plus expenses can often outweigh the profit on the work to be done.  You can provide mockups and wireframes but if this is not the person who is going to use the system them their input is not going to be of much use. "
b'132074'	b'How do I write a specification?'	b'   Possible Duplicate:   how do I write a functional specification quickly and efficiently       With so many projects changing halfway - and clients assuming much can be changed at no additional cost - I would like to start writing specifications. However, I have not done this before and do not know much about the basics. Where do I start? Are there often-used formats or templates for writing specifications? Does the programmer write this, does the client do this, or do both write this up? Any places where to see sample specs? All advise on how to get started is welcome.  '
b'124399'	b'Use Case level confusion'	b"I'm working on the use case model of a web design application something like Dreamwaver, I'm little confusing about to which level should I write the use case model.  ex: when the user insert a text should I provide a use cases of:   select font select size color Italic bold .. .. ..   or it's enough just providing a use case called 'modify text properties'? "
b'128093'	b'Are detailed style requirements inappropriate from Marketing?'	b"I'm working on the UI-side of a project which is under intense scrutiny by our Marketing group.  Most of the time, we're reviewing functionality requirements.  Once in a while, however, they will get very in-depth regarding colors, styles, etc.  For example, I've been tasked by Marketing to make one particular button a very specific color and a very specific size,  In other projects I've worked on, however, these types of requirements have been quietly ignored or rejected when they came from Marketing.  Managers and tech leads have insisted Marketing shouldn't be specifying details like colors, styles, control layouts, etc., but I've never really been told why.  Is it inappropriate for Marketing to list detailed style requirements for a UI, including colors, shades, layout, sizes, etc.?  If so, why?  Is this just a case of conflicting philosophies regarding Marketing responsibilities?  (I should probably mention that we're not working with a unified style guide for company-wide applications.  In the past, other projects I've worked on have 'winged it' when assembling their UIs.)    Edit: I removed an editorial comment I made which probably implied this post was a complaint couched in a question. I'm not really concerned with what I should do, but rather I would like better understanding as to what Marketing's responsibility is regarding these types of requirements.  I've had very little exposure to Marketing (I've been more distanced from them in previous projects) and I don't understand their role as it pertains to UI styling. "
b'77253'	b'how do you deal with a vague software proposal?'	b'We all get them. What do you do when you are supposed to write a functional spec from a woolly proposal? You can write a ton of questions about the proposal but answers are not always forthcoming. Sometimes for political reasons you cannot make someone firm them up. How do you deal with a vague software proposal, when experience and intuition only go so far? '
b'122436'	b'Should back end processes be included in use cases in requirements document?'	b"We're writing a requirements document for our client and need to include the use cases of the system. We're following this template:   ID Description Actors Precondition Basic Steps Alternate Steps Exceptions Business validations/Rules Postconditions   In the Basic Steps section, should we include steps that the system performs in the back end or should we only include steps that the user directly interacts with?  Example:  Basic Steps for Search 1:  User goes to search page User enters term User presses search System matches search term with database entries System displays results   vs  Basic Steps for Search 2:  User goes to search page User enters term User presses search System displays results  "
b'22349'	b'What FOSS solutions are available to manage software requirements?'	b"In the company where I work, we are starting to plan to be compliant to the software development life cycle. We already have, wiki, vcs system, bug tracking system, and a continuous integration system.  The next step we want to have is to start to manage, in a structured way, software requirements. We dont want to use a wiki or shared documentation because we have many input (developer, manager, commercial, security analyst and other) and we dont want to handle proliferation of .doc around the network share. We are trying to search and we hope we can find and use a FOSS software to manage all this things.  We have about 30 people, and don't have a budget for commercial software. We need a free solution for requirements management.  What we want is software that can manage:  Required features:   Software requirements divided in a structured configurable way Versioning of the requirements (history, diff, etc, like source code) Interdependency of requirements (child of, parent of, related to) Rule Based Access Control for data handling Multi user, multi project File upload (for graph, document related to or so on) Report and extraction features   Optional Features:   Web Based Test case Time based management (timeline, excepted data, result data) Person allocation and so on Business related stuff Hardware allocation handling   I have already play with testlink and now i'm playing with RTH, the next one i try is redmine. "
b'116429'	b'Why it is important to include definition of success/failure in specification?'	b"I've read Steve McConnell's 'Code Complete' and one of items in checklist for requirements is: 'Is the definition of success included? Of failure?'.  Why is this important? Can you write any examples of those definitions? Can anybody provide examples of good requirements specification? "
b'114998'	b'Is there any circumstance in which a strict waterfall project can succeed when requirements are not clearly defined?'	b'I can not see how a software project can make any meaningful progress under a waterfall methodology if the requirements cannot be clearly stated from the outset. Am I missing anything? '
b'112022'	b'Alternatives to *documents* in the SDLC?'	b"Since no one prints anything any more, the concept of actual project documents (meaning, a monolithic piece of formatted text) seems like it could be improved on. Problems with documents are things like Word version incompatibilities, endless messing around with templates, the fact people hate reading them...  I'm wondering if there are alternatives, like websites that would help manage the content, imposing some structure, but allowing things like linking to individual bits. But I guess the site would have to be able to spit out a 'document' for the times it's needed (filing, showing sponsors who ask, etc)  For example, instead of a 'project plan document', I'm imagining a project planning site where you can work on just the resourcing with relevant people, then you work on scheduling with other relevant people, and work packages with other relevant people.   Instead of an SRS document, some site that lets you manage requirements, assigning priorities, phases etc...but that could ultimately generate an actual SRS document if you needed it.  Thoughts? The context here is small, agile teams but with occasional need to produce documents to demonstrate progress. We're certainly not big enough to warrant anything like Rational or whatever they use these days in big companies. "
b'113841'	b'How can we verify that software meets specifications meets requirements?'	b"So we're pretty good at eliciting requirements from our end customers, business division and sales/marketing. We plan projects to add/enhance features to meet those requests and prioritize tasks to meet deadlines in most profitable order.  Over time, the software product has grown, the market has changed and the original customers are less of a priority compared to some new opportunities.   So, the requirements, and therefore specifications, have changed, although all the requirements of all the stakeholders can co-exist (there are no conflicts).  We've also had some churn in the development team with people moving up, across or out and so now there's nobody who was there 'at the beginning'.  This has led to some customer outages where we removed what looked like unused code paths (the logic was unfamiliar to everyone) only to find the customer that needed that logic happened to run through the application a couple of months later.  We know that we could put in Unit Tests to verify that behaviour does not change accidentally (as in the case above), but this is a large code-base so it is taking time to unit-test everything.  What non-manual techniques/technologies/best-practices are available to us to verify that the software (still) meets the specifications and requirements?  I've heard agile/iterative proponents say something like 'the Unit Tests are the specification'. Is there any thing we could use to marry the unit tests to the original requirements?    Footnotes  (I saw this other post, but that is less about verification and more about usability testing)   We already do iterative development, releasing every two weeks or less.  The source base is mostly C++ on Unix. Requirements and specifications currently documented in Wiki, Word, ticketing systems and MS Project. "
b'102955'	b'Formal requirements analysis'	b"I've been doing a Requirements Analysis module in my university. We've covered all kinds of formal requirements stuff, like UML, Use Case Diagrams, Sequence Diagrams and Contracts. I have to ask- are any of these things of any value whatsoever in the real world? The only Use Case Diagrams I've ever seen could be summed up in a vastly more succint and understandable way in plain English- or even code in a reasonable language of your choice- and the same goes for the other things I've mentioned. "
b'102647'	b'Dealing with multiple business requirement streams without compromising team size'	b"A business has five discrete streams of business requirements to be implemented in software. There is a team of ten developers.   A 'naiive' organisational solution is to split the team into five 'teams' of two (one per requirements stream). But I feel this compromises the integrity of the team (making teamwork more difficult, causing silo effects, making communication harder etc).  Has anyone any insight into how best organise a developer team like this to deliver against multiple requirement streams? Is it workable to have fewer development teams than there are requirements streams? "
b'19911'	b'How is determined an impact of a requirement change on the existing code?'	b"How companies working on large projects evaluate an impact of a single modification on an existing code?    Since my question is probably not very clear, here's an example:  Let's take a sample business application which deals with tasks. In the database, each task has a state, 0 being 'Pending', ... 5 - 'Finished'.  A new requirement adds a new state, between 2nd and 3rd one.  It means that:   A constraint on the values 1 - 5 in the database must be changed, Business layer and code contracts must be changed to add a new state, Data access layer must be changed to take in account that, for example the state StateReady is now 6 instead of 5, etc. The application must implement a new state visually, add new controls for it, new localized strings for tool-tips, etc.   When an application is written recently by one developer, it's more or less easy to predict every change to do. On the other hand, when an application was written for years by many people, no single person can anticipate every change immediately, without any investigation.  So since this situation (such changes in requirements) is very frequent, I imagine there are already some clever techniques and ways to predict the impact. Is there any? Do you know any books which deal about this subject?    Note: my question is not related to How do you deal with changing requirements? question. In fact, I'm not interested in evaluating the cost of a change, but rather the way to predict the parts of an application which will be concerned by the change. What will be those changes and how difficult they are really doesn't matter in my question. "
b'91000'	b'The correct choice of tools for a new Deep Zoom application'	b"I want to create a new application.  It will basically be a Deep Zoom application that users can draw annotations on (that will save to a DB so other users can see those annotations.) At first it will just simply run in a browser.  However, the app would be useful if it could be used by enthusiasts in the field, so ability to run on smartphones or other handheld devices would be massively beneficial.  3G/4G signal is likely to be practically non existent in those places, so having the ability to download all the images and info for an 'area' would be good.  I can't decide on which technology to use.  Silverlight Deep Zoom apps look really nice in browsers, but I have heard that it is not a widely supported technology that MS might be ditching anyway and the only smartphones that would be capable of running Silverlight would be Windows phones = a very small share of the smartphone market.  Flash will probably never run on iPhones/Apple products in general.  So should I use HTML5?  HTML5 all seems a little confusing to me at the moment, would it even be possible to make a HTML5 Deep Zoom application that users could annotate?  Any thoughts and advice would be really handy, thanks for reading. "
b'9371'	b'What is the proper way to create requirements documents?'	b'Right now my supervisor is creating requirements documentation / specs for me using bugtracking software.  This seems like a terrible idea to me, all the requirements are on these little tickets and I have to click around on this dumb webform to get at the requirements.  What is a sane software solution for requirements / software specs?    To be clear, I am building this large software component with quite a few features and these features are being set forth in this bugtracking software. '
b'90994'	b'What are the best practices when performing requirements analysis through job observation?'	b"I'm considering sitting with the end-users and observing them while the work for a day to better understand the software requirements.  Before I try this, I'm hoping someone can provide a list of best practices, suggestions on when this approach is more/less suitable than simply interviewing the users, and notes from your own experiences using job observation/shadowing.  References to other sites or recollections of your own personal experience are both welcome. "
b'82763'	b'Why bother differentiating between functional and nonfunctional requirements?'	b"I understand the difference between the two, but I get questioned by my colleagues of the benefit of labeling requirements as functional or nonfunctional (or transitional).  Why bother to do so?  He spent what he said was two days going through a list of requirements for one project, and saw no benefit to it, because the end result was to submit the document to another business entity with the edict, 'Do it all.'     What I fear is requirements lumped together in one document.  I tried to explain the benefit in practical terms, but couldn't sell it.  How do I sell the benefit of documenting which requirements are functional and which are nonfunctional.   "
b'78432'	b'Can non-technical staff gather requirements on behalf of the development team?'	b'Working in a large organisation, it is often the case that the members of the development team are not able to get direct access to the client to gather requirements. Is it possible/advisable to give a list of questions to an account manager so that they can gather requirements on your behalf? '
b'67923'	b'Coaxing requirements out of business people?'	b'What methods seem to work best to coax requirements out of non-tech business people?  I am working with a team that\xe2\x80\x99s trying to get a spec together for a project.  Every time we have met and it comes down to expectations for the next meeting, we ask for the business people to bring back their requirements.  They usually respond something like this: \xe2\x80\x9cWell, do you think you guys could whip up a prototype so we can see what we like next week\xe2\x80\xa6you know, not with any data or anything since it\xe2\x80\x99s a prototype, just the functionality.\xe2\x80\x9d  This is a 6 month plus project so that is obviously infeasible (we would have to develop the entire thing!), and we don\xe2\x80\x99t even know what to prototype without some sort of spec.  Frankly, I think like most people, they have some idea of what they want, they just are not thinking about it in the focused sort of way necessary to gather true requirements. As an alternative to simply telling them, \xe2\x80\x9cgive us what you want or we can\xe2\x80\x99t/won\xe2\x80\x99t do any work\xe2\x80\x9d (we do want them to be happy with the results), are there ways to help them decide what they want? For example, we could tell them:  \xe2\x80\x9cDraw out some screens (in Powerpoint, on a napkin, whatever) that show the UI you would like with all of the data you want to see and a description of the functionality in the margins. From this, we will polish it up and build the backend based on this set of behavior requirements.\xe2\x80\x9d  OR  \xe2\x80\x9cDon\xe2\x80\x99t worry about how it will look right now (the number 1 hang up). Just give us a list of all the data you want about each thing the program keeps track of. So for \xe2\x80\x9cCustomer\xe2\x80\x9d you might list: name, address, phone number, orders, etc.  It does not have to be a perfect database structure, but we can work something out from this and get an idea of what you are looking for\xe2\x80\x9d  Do either of these alternative approaches to get business people focused on what they want make sense? Are there alternatives that you have seen in action? '
b'74925'	b'Let users get requirements together on their own or guide them along?'	b"I'm sure everyone has experienced something like this. You go into a meeting with a client who has a project. They have no/few requirements in mind and the vaguest understanding of what they want/need. At this point, there seem to be two options:  1) Tell the users, 'Ok, so I can't build something for you if you cannot even describe it yet. Why don't we get back together in a few weeks when you know what you want'.  2) Meet with the users a few times and help them figure out what they want by guiding them through with the good ole Socratic method. 'Do you need to track X?', 'How about Y?', 'Do you need functionality Z?'   With the first option, you don't get stuck doing someone else's job, or having gain psychic powers, however, the users might never present you with a coherent specification, or they might take forever as the deadline continues to approach.  With the second option, you waste a bunch of time becoming a business analyst, and have to cram a bunch of business knowledge into your head that you will probably never use again, but you will be much more likely to come out with a spec that makes any sense.   To me, this is one of the most challenging aspects of development, and I have a feeling I'm not alone in this sentiment. In your experience, which of these options tends to work better?  "
b'66301'	b'Conceptual Requirement and Scope'	b'Appreciate your help with my questions   What are conceptual requirements? How do they compare with stakeholder, business and functional requirements? what CASE tools can be used to capture conceptual requirements and scope?  '
b'68821'	b'What techniques should be used to ensure clear communication from the customer?'	b"Some customers use terms from the domain language interchangably and incorrectly. This has, on several occassions, lead to an implementation of a feature in a way that was not desired by the customer. Are there any techniques that can be used to enforce the correct use of terms? Are there any techniques that can be used to prevent someone from handing 'back of a cigarette packet' requirements to a developer? "
b'61227'	b'Why bother with detailed specs?'	b"When writing software, what's the point of writing a formal, detailed dead-tree specification?  To clarify, a somewhat informal, high-level specification for people who don't want to read the code makes sense to me.  A reference implementation in well-commented, readable source code is about the most unambiguous specification of anything you're going to get, though, since a computer has to be able to execute it.  Formal specs are often just as hard to read, and almost as hard to write, as code.    What benefits does a formal specification offer over a reference implementation plus a little documentation about what behavior is undefined/implementation-defined regardless of how it works in the reference implementation.  Edit:  Alternatively, what's wrong with the tests being the formal specification? "
b'58629'	b'Should a programmer &quot;think&quot; for the client?'	b"I have gotten to the point where I hate requirements gathering.  Customer's are too vague for their own good.  In an agile environment, where we can show the client a piece of work to completion it's not too bad as we can make small regular corrections/updates to functionality.  In a 'waterfall' type in environment (requirements first, nearly complete product next) things can get ugly.  This kind of environment has led me to constantly question requirements.  E.G. Customer wants 'automatically convert input to the number 1' (referring to a Qty in an order).  But what they don't think about is that 'input' could be a simple type-o.  An 'x' in a textbox could be a 'woops' not I want 1 of those 'toothpaste' products.  But, there's so much in the air with requirements that I could stand and correct for hours on end smashing out what they want.  This just isn't healthy.  Working for a corporation, I could try to adjust the culture to fit the agile model that would help us (no small job, above my pay grade).  Or, sweep ugly details under the rug and hope for the best.  Maybe my customer is trying to get too close to the code?  How does one handle the problem of 'thinking for the client' without pissing them off with too many questions?   "
b'48481'	b'Do we need use case levels or not?'	b'I guess no one would argue for decomposing use cases, that is just wrong. However sometimes it is necessary to specify use cases, which are on lower, more technical level, like for example authetication and authorization, which give the actor value, but are further from his business needs. Cockburn argues for levels when needed and explains how to move use cases from/to different levels and how to determine the right level. On the other hand, e.g. Bittner argues against use case levels, although he uses subflows, requires the vision documents which contain information about the purpose of the system in the business, much like use cases on the higher level, and at the end of his book mentions, that at least two levels are needed most of the time. My questionis, do you find use case levels necessary, helpful or unwanted? What are the reasons? Am I misssing some important arguments? '
b'42652'	b'using a wiki for requirements'	b"I'm looking into ways of improving requirements management.  Currently, we have a Word document published on a Web site.  Unfortunately, we cannot (to my knowledge) look at changes from one revision to the next.  I would greatly prefer to be able to do so, much like with a wiki or VCS (or both, like the wiki's on bitbucket!).  Also, each document describes changes devs are expected to meet by a given deadline.  There is no collection of accumulated app features documented anywhere, so it's sometimes hard to distinguish between a bug and a (poorly-designed) feature when trying to make quick fixes to legacy apps.  So I had an idea I wanted to get feedback on.  What about:   Using a wiki so that we can track who changed what when (mostly to even see if any edits were made since the last time one looked). Having one, say, wiki page per product rather than one per deadline, keeping up with all features of the product rather than the changes that should be implemented.  This way, I can look at a particular revision of the page to see what the app should do at a given point in time, and I can look at changes to the page since the last release for the requirements to be implemented by the next deadline.   Waddayathink? "
b'40676'	b'Dealing with bad/incomplete/unclear specifications?'	b"I'm working on a project where our dev team gets the specifications from the business part of the company. Both the business management and the IT management require estimates and deadline projections, as they should.  The good thing is that estimates are mostly made by the actual developers who get to do the required features. The bad thing is that the specifications are usually either too simple (it turns out you're left with a lot of question marks over your head because a lot of information seems to be missing) or too complex(up to the point that you can't even visualize where everything would 'fit' in the app). More often than not, the business part of the specs are either incomplete or unaware of what can and can't be done (given the previously implemented business logic).   Dev team is given about a day per new spec to give an estimate and we do try to clear uncertainties, usually by meeting up with whoever did the spec. Most of the times it turns out that spec writers haven't really thought everything through, and it's usually only when we start designing and developing that we end up in trouble, as a lot of the spec seems to have holes.  How do you deal with this? Are you generous on estimates in advance? "
b'18979'	b'Freelancers: How Do You Go About Gathering Requirements?'	b'As a freelance programmer:   What is your process for gathering requirements from a client? How much time does the requirement gathering process take you? I know this is not fixed, and there are variables such as how prompt the client is in responding and such. In general, accounting for the delay in responses and such, how long does it take to get to the final requirement? Which communication channel (email, phone, instant messenger, other) do you use to gather these requirements? Do you charge for the time spent in requirements gathering? Are there any deliverables in your requirements gathering process? If so what are they?  '
b'35087'	b'Requirment Analysis Communication'	b'Someday s ago we was discussing about the current project, and suddenly sir and my senior started talking about the new feature to add in the project , and i become lost :). i was not able to find how i should provide my input for the new feature. So i want to know what things should be discussed for developing new feature in project and how we can contribute in requirement talk of new features.  Please suggest. '
b'30764'	b'What are important things to remember when reengineering a legacy application?'	b'About to embark on the initial phases of a project to rewrite a legacy application from the ground up (existing business rules will change somewhat, and be extended to incorporate a large number of new requirements that the existing infrastructure cannot handle). I am looking for items that are important to remember when working to reengineer an existing application. '
b'21911'	b'How to estimate cost with very little information?'	b"I have a client who wants a web app that will let him do the following (as he told me word for word):   User registration Recurring payments for users Online conference room reservation   I am supposed to give him a cost estimate very fast and I don't have any time to do any deeper requirements analysis! How would you deal with that kind of situation? Should I just give a very broad estimate and work out the exact requirements once he has accepted the estimate? At which point do you usually gather requirements, after or before getting a contract? "
b'20233'	b'user&#39;s requirements verification, howto?'	b"My question is: How can you verify the users' requirements early in the software creation process?   I show the user specifications, prototypes, demos... but still users forget to share some 'insignificant details' about the process or business rules and data. Which pops up after the final test as some 'really small and rare exceptions' - which are turned into change request and accumulate a lot of work.  So how do you prototype (or verify) users requirements early in the project? "
b'16687'	b'How do you get a client to understand the importance of a project lifecycle?'	b"Situation is I have a number of in-house clients who continue to have trouble grasping the concept of defining clear requirements for a project and committing to them. Unfortunately my job situation is that I can't decline such projects, and I am often forced into situations that I can tell are doomed to scope creep (or worse) from the very start. Telling them that detailed requirements are vital and why we need them (using examples of past troubled projects due to this) have not helped.   I am looking for techniques, tips, words, etc that you might use to motivate or illuminate clients in such situations to the necessity of requirements,setting milestones, etc.  I am only a developer, and not a manager. "
